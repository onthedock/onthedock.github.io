<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>linux on On The Dock</title>
    <link>https://onthedock.github.io/tags/linux/</link>
    <description>Recent content in linux on On The Dock</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Handmade with &amp;#9829; by Xavi Aznar</copyright>
    <lastBuildDate>Mon, 25 Jul 2022 20:24:20 +0200</lastBuildDate><atom:link href="https://onthedock.github.io/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Reducir el tamaño del disco en VirtualBox</title>
      <link>https://onthedock.github.io/post/220725-reducir-el-tamano-del-disco-en-virtualbox/</link>
      <pubDate>Mon, 25 Jul 2022 20:24:20 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/220725-reducir-el-tamano-del-disco-en-virtualbox/</guid>
      <description>&lt;p&gt;Los discos dinámicos en VirtualBox crecen automáticamente a medida que aumentan los datos que se guardan&amp;hellip; Sin embargo, el tamaño no decrece aunque borremos ficheros. Esto significa que aunque el fichero del disco de una máquina virtual ocupe, en el sistema anfitrión, 50GB, por ejemplo, gran parte de esos 50GB pueden estar vacíos&amp;hellip;&lt;/p&gt;
&lt;p&gt;En esta entrada indico los pasos a seguir para reducir el tamaño del fichero del disco, eliminando todo ese &lt;a href=&#34;https://www.imdb.com/title/tt0118884/quotes/qt0379383&#34;&gt;&lt;em&gt;espacio desaprovechado&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Cliente API en Bash (con curl)</title>
      <link>https://onthedock.github.io/post/220617-cliente-api-en-bash/</link>
      <pubDate>Fri, 17 Jun 2022 20:46:13 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/220617-cliente-api-en-bash/</guid>
      <description>&lt;p&gt;En una entrada anterior, &lt;a href=&#34;https://onthedock.github.io/post/220518-obtener-respuesta-y-http-status-con-curl/&#34;&gt;Obtener respuesta y código de la petición HTTP con curl&lt;/a&gt;, explicaba cómo mejorar, en mi opinión, la &lt;em&gt;relación&lt;/em&gt; con la API desde los &lt;em&gt;scripts&lt;/em&gt; (en Bash) que se ejecutan desde una &lt;em&gt;pipeline&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;La idea que explicaba en el artículo era cómo usar el código HTTP devuelto por la función que expone la API para controlar posibles errores.&lt;/p&gt;
&lt;p&gt;Como prueba de concepto fue satisfactoria, pero no resulta práctica aplicarla; en un caso real se usan múltiples documentos y la repetición del mismo código una y otra vez hace que se alcance el límite de cuatro mil caracteres en un &lt;em&gt;paso&lt;/em&gt; de la &lt;em&gt;pipeline&lt;/em&gt;&amp;hellip;&lt;/p&gt;
&lt;p&gt;Así que la solución es &lt;em&gt;encapsular&lt;/em&gt; esta idea en una función en vez de repetir el mismo código una y otra vez: &lt;a href=&#34;https://en.wikipedia.org/wiki/Don%27t_repeat_yourself&#34;&gt;Don&amp;rsquo;t repeat yourself&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Sacando partido de la funcionalidad de jq</title>
      <link>https://onthedock.github.io/post/220519-jq/</link>
      <pubDate>Thu, 19 May 2022 20:05:53 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/220519-jq/</guid>
      <description>&lt;p&gt;Siguendo con el &lt;a href=&#34;https://onthedock.github.io/post/220518-obtener-respuesta-y-http-status-con-curl/&#34;&gt;tema de ayer&lt;/a&gt;, hoy quiero revisar otro bloque de código.&lt;/p&gt;
&lt;p&gt;En este caso, se construye un &lt;em&gt;array&lt;/em&gt; en JSON usando Bash &lt;em&gt;puro&lt;/em&gt;, cuando es el proceso se simplifica &lt;strong&gt;enormemente&lt;/strong&gt; gracias a la función &lt;code&gt;--slurp&lt;/code&gt; de &lt;code&gt;jq&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Obtener respuesta y código de la petición HTTP con curl</title>
      <link>https://onthedock.github.io/post/220518-obtener-respuesta-y-http-status-con-curl/</link>
      <pubDate>Wed, 18 May 2022 18:30:52 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/220518-obtener-respuesta-y-http-status-con-curl/</guid>
      <description>&lt;p&gt;Llevo una temporada revisando código -MUCHO, MUCHO código- en Bash.&lt;/p&gt;
&lt;p&gt;Como parte de uno de los &lt;em&gt;steps&lt;/em&gt; de ejecución de una &lt;em&gt;pipeline&lt;/em&gt;, se consulta una API para obtener o actualizar información de una base de datos y &lt;em&gt;hacer cosas&lt;/em&gt; con esa información, como desplegar recursos en un proveedor cloud (usando la &lt;em&gt;cli&lt;/em&gt;) o lanzando Terraform.&lt;/p&gt;
&lt;p&gt;Uno de los patrones que me encontrado a la hora de interaccionar con la API es el siguiente:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Generar el &lt;em&gt;payload&lt;/em&gt; en JSON y guardarlo en una variable.&lt;/li&gt;
&lt;li&gt;Ejecutar la petición usando &lt;code&gt;curl&lt;/code&gt; y guardar la respuesta en un fichero.&lt;/li&gt;
&lt;li&gt;Filtrar la respuesta usando &lt;code&gt;jq&lt;/code&gt; leyendo el fichero.&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Error en k3sup: Unable to Connect to Server over SSH (Ubuntu 22.04)</title>
      <link>https://onthedock.github.io/post/220509-error-en-k3sup-unable-to-connect-to-server-ubuntu-22-04/</link>
      <pubDate>Mon, 09 May 2022 21:43:30 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/220509-error-en-k3sup-unable-to-connect-to-server-ubuntu-22-04/</guid>
      <description>&lt;p&gt;Tras solucionar los problemas con Vagrant al actualizar a PoP_OS! 22.04 (basada en Ubuntu 22.04), encuentro otro problema relacionado también con SSH :(&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/alexellis/k3sup&#34;&gt;k3sup&lt;/a&gt;, el instalador de clústers de Kubernetes usando &lt;a href=&#34;https://k3s.io/&#34;&gt;k3s&lt;/a&gt;, no puede conectar con las máquinas virtuales basadas en la imagen &lt;a href=&#34;https://app.vagrantup.com/ubuntu/boxes/jammy64&#34;&gt;ubuntu/jammy64&lt;/a&gt; (la nueva versión de Ubuntu 22.04).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Ubuntu: Evita que un paquete se actualice con &#34;apt-mark hold&#34;</title>
      <link>https://onthedock.github.io/post/220508-evitar-que-un-paquete-se-actualice/</link>
      <pubDate>Sun, 08 May 2022 13:14:23 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/220508-evitar-que-un-paquete-se-actualice/</guid>
      <description>&lt;p&gt;La solución para el &lt;a href=&#34;https://onthedock.github.io/post/220507-error-en-vagrant-tras-actualizar-a-pop-os-22-04/&#34;&gt;Error en Vagrant tras actualizar a Pop_Os! 22.04&lt;/a&gt; es la instalación de una versión concreta del software, en este caso, la 2.2.19.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Error en Vagrant tras actualizar a Pop_Os! 22.04</title>
      <link>https://onthedock.github.io/post/220507-error-en-vagrant-tras-actualizar-a-pop-os-22-04/</link>
      <pubDate>Sat, 07 May 2022 10:55:52 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/220507-error-en-vagrant-tras-actualizar-a-pop-os-22-04/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;TL,DR;&lt;/em&gt; Solución en &lt;a href=&#34;https://discuss.hashicorp.com/t/vagrant-up-error-on-ubuntu-22-04-pkeys-are-immutable-on-openssl-3-0/38734&#34;&gt;Vagrant up error on Ubuntu 22.04: pkeys are immutable on OpenSSL 3.0&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Ayer actualicé a la nueva versión de PoP_OS!, basada en Ubuntu 22.04 LTS. Todo funcionó de maravilla, como debe ser. El único problema -por llamarlo de algún modo- identificado tras la actualización ha sido la pérdida de la configuración de &lt;a href=&#34;https://github.com/Swordfish90/cool-retro-term&#34;&gt;Cool Retro Term&lt;/a&gt;; &lt;em&gt;no big deal&lt;/em&gt;&amp;hellip;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Cockpit: Cannot refresh cache whilst offline</title>
      <link>https://onthedock.github.io/post/220327-cockpit-cannot-refresh-cache-whilst-offline/</link>
      <pubDate>Sun, 27 Mar 2022 20:32:32 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/220327-cockpit-cannot-refresh-cache-whilst-offline/</guid>
      <description>&lt;p&gt;Hoy he instalado &lt;a href=&#34;https://cockpit-project.org/&#34;&gt;Cockpit&lt;/a&gt; y después de configurar una IP estática para el servidor que uso de &lt;em&gt;laboratorio&lt;/em&gt;, la sección &lt;em&gt;Software Updates&lt;/em&gt; ha dejado de funcionar, mostrando el mensaje de error &lt;code&gt;Cannot refresh cache whilst offline&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;La solución la he encontrado en &lt;a href=&#34;https://caissyroger.com/2020/10/05/cockpit-cannot-refresh-cache-whilst-offline/&#34;&gt;Cockpit – “cannot refresh cache whilst offline”&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Todo lo que esconden las opciones por defecto en Docker</title>
      <link>https://onthedock.github.io/post/220325-opciones-por-defecto/</link>
      <pubDate>Fri, 25 Mar 2022 20:33:24 +0100</pubDate>
      
      <guid>https://onthedock.github.io/post/220325-opciones-por-defecto/</guid>
      <description>&lt;p&gt;El título tiene una sonoridad un poco a &lt;em&gt;click bait&lt;/em&gt;, así que explicaré rápidamente a qué me refiero.&lt;/p&gt;
&lt;p&gt;Hace poco que hemos empezado a colaborar en un proyecto nuevo.
Mientras nos vamos &lt;em&gt;poniendo al día&lt;/em&gt; estoy ayudando a uno de mis compañeros -un &lt;em&gt;crack&lt;/em&gt; en &lt;em&gt;networking&lt;/em&gt;- con temas relacionados con contenedores, con los que está menos familiarizado.&lt;/p&gt;
&lt;p&gt;Revisando los ficheros de configuración de &lt;em&gt;Google Cloud Build&lt;/em&gt;, encontramos, en el mismo fichero, referencias a la imagen de un contenedor como &lt;code&gt;hashicorp/terraform:latest&lt;/code&gt;, otras en las que el nombre es de la forma &lt;code&gt;gcr.io/cloud-builders/gcloud&lt;/code&gt; y otras en las que es, &lt;em&gt;simplemente&lt;/em&gt;, &lt;code&gt;alpine&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Y claro, mi compañero no entiende nada&amp;hellip;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Obtener el ID de un contenedor #discuss.kubernetes.io</title>
      <link>https://onthedock.github.io/post/220321-obtener-el-id-de-un-contenedor/</link>
      <pubDate>Mon, 21 Mar 2022 22:14:17 +0100</pubDate>
      
      <guid>https://onthedock.github.io/post/220321-obtener-el-id-de-un-contenedor/</guid>
      <description>&lt;p&gt;Estaba leyendo las nuevas entradas en el foro de Kubernetes y me he encontrado con &lt;a href=&#34;https://discuss.kubernetes.io/t/getting-pod-id-and-container-id-of-a-container-when-it-restarts/19413&#34;&gt;Getting Pod ID and container ID of a container when it restarts&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;La pregunta es cómo obtener el identificador de un &lt;em&gt;pod&lt;/em&gt; (y de un contenedor dentro del &lt;em&gt;pod&lt;/em&gt;) cuando éste se reinicia. Lo curioso -al menos para mí- es que esa información es necesaria porque hay &lt;em&gt;otro pod&lt;/em&gt; que monitoriza el primero que necesita esta información (supondo que para identificar el &lt;em&gt;pod&lt;/em&gt; monitorizado).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Bitwarden Cli</title>
      <link>https://onthedock.github.io/post/220320-bitwarden-cli/</link>
      <pubDate>Sun, 20 Mar 2022 19:44:20 +0100</pubDate>
      
      <guid>https://onthedock.github.io/post/220320-bitwarden-cli/</guid>
      <description>&lt;p&gt;Hoy en día es &lt;strong&gt;obligatorio&lt;/strong&gt; usar un gestor de contraseñas. En mi caso, uso &lt;a href=&#34;https://bitwarden.com/&#34;&gt;Bitwarden&lt;/a&gt; (la &lt;a href=&#34;https://bitwarden.com/pricing/&#34;&gt;edición &lt;em&gt;Personal&lt;/em&gt;&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Como cada vez paso más tiempo en la línea de comandos, he decido probar la &lt;a href=&#34;https://bitwarden.com/help/cli/&#34;&gt;versión CLI&lt;/a&gt; de Bitwarden.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Guardar el estado de Terraform en MinIO</title>
      <link>https://onthedock.github.io/post/220311-guardar-el-estado-de-terraform-en-minio/</link>
      <pubDate>Fri, 11 Mar 2022 18:59:41 +0100</pubDate>
      
      <guid>https://onthedock.github.io/post/220311-guardar-el-estado-de-terraform-en-minio/</guid>
      <description>&lt;p&gt;Terraform almacena el &lt;em&gt;estado&lt;/em&gt; de la configuración en un fichero. Este fichero es &lt;strong&gt;crítico&lt;/strong&gt; para que Terraform pueda mantener la coherencia entre el estado definido en los ficheros de configuración y el estado &lt;em&gt;real&lt;/em&gt; de la infraestructura desplegada.&lt;/p&gt;
&lt;p&gt;Por defecto, Terraform almacena el &lt;em&gt;estado&lt;/em&gt; de forma local; para facilitar la colaboración entre diferentes miembros de un equipo -entre otros casos de uso-, Terraform ofrece la posibilidad de usar otras ubicaciones para guardar el estado. Estas &lt;em&gt;ubicaciones&lt;/em&gt; reciben el nombre de &lt;em&gt;backends&lt;/em&gt; en Terraform (y hay unos cuantos disponibles, como puedes observar desplegando la entrada &lt;a href=&#34;https://www.terraform.io/language/settings/backends&#34;&gt;Available Backends&lt;/a&gt; en la web de Terraform).&lt;/p&gt;
&lt;p&gt;Una opción habitual es la de usar un &lt;em&gt;bucket&lt;/em&gt; en un servicio como &lt;a href=&#34;https://www.terraform.io/language/settings/backends/s3&#34;&gt;S3&lt;/a&gt; de AWS como &lt;em&gt;remote backend&lt;/em&gt;. Pero si no tienes acceso a una cuenta de AWS, puedes usar &lt;a href=&#34;https://docs.min.io/docs/MinIO-docker-quickstart-guide.html&#34;&gt;MinIO&lt;/a&gt; para trabajar con un &lt;em&gt;backend&lt;/em&gt; de tipo S3 de forma completamente &lt;em&gt;offline&lt;/em&gt; (por ejemplo, para aprender cómo funciona Terraform ;-D )&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Sobre el uso de mayúsculas o minúsculas en los nombres de variables en Bash</title>
      <link>https://onthedock.github.io/post/220305-sobre-el-uso-de-mayusculas-o-minusculas-para-los-nombres-de-variables-en-bash/</link>
      <pubDate>Sat, 05 Mar 2022 11:30:49 +0100</pubDate>
      
      <guid>https://onthedock.github.io/post/220305-sobre-el-uso-de-mayusculas-o-minusculas-para-los-nombres-de-variables-en-bash/</guid>
      <description>&lt;p&gt;He estado buscando información sobre cuál es la manera correcta a la hora de definir los nombres de las variables en Bash&amp;hellip; Y como en el caso de la eterna batalla entre espacios vs tabs o Vim vs Emacs, parece que no hay una solución definitiva (o seguida por todo el mundo de forma generalizada).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Ejecutar comando con `sudo` manteniendo las variables de entorno del usuario</title>
      <link>https://onthedock.github.io/post/220305-ejecutar-comando-con-sudo-y-variables-de-entorno/</link>
      <pubDate>Sat, 05 Mar 2022 07:51:02 +0100</pubDate>
      
      <guid>https://onthedock.github.io/post/220305-ejecutar-comando-con-sudo-y-variables-de-entorno/</guid>
      <description>&lt;p&gt;Las variables de entorno se definen para cada usuario; por tanto, para mi usuario &lt;code&gt;xavi&lt;/code&gt;, puedo configurar la variable &lt;code&gt;https_proxy&lt;/code&gt; mediante:&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>¿Por qué los Deployments usan Replicasets pero los Statefulsets y los Daemonsets no?</title>
      <link>https://onthedock.github.io/post/211230-porque-los-deployments-usan-replicasets-pero-no-los-statefulsets-ni-los-daemonsets/</link>
      <pubDate>Thu, 30 Dec 2021 12:12:02 +0100</pubDate>
      
      <guid>https://onthedock.github.io/post/211230-porque-los-deployments-usan-replicasets-pero-no-los-statefulsets-ni-los-daemonsets/</guid>
      <description>&lt;p&gt;Revisando el &lt;em&gt;feed&lt;/em&gt; del foro de Kubernetes &lt;a href=&#34;https://discuss.kubernetes.io/&#34;&gt;discuss.kubernetes.io&lt;/a&gt;, me llamó la atención la pregunta de &lt;code&gt;user2&lt;/code&gt; &lt;a href=&#34;https://discuss.kubernetes.io/t/why-deployment-need-replicaset-but-daemonset-and-statefulset-dont-need/18334&#34;&gt;Why deployment need replicaset, but daemonset and statefulset don’t need&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://discuss.kubernetes.io/t/why-deployment-need-replicaset-but-daemonset-and-statefulset-dont-need/18334/2?u=xavi&#34;&gt;Respondí en el foro&lt;/a&gt;, pero quiero ampliar la respuesta aquí.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Tema personalizado de Oh My Zsh</title>
      <link>https://onthedock.github.io/post/211229-tema-personalizado-de-oh-my-zsh/</link>
      <pubDate>Wed, 29 Dec 2021 23:22:36 +0100</pubDate>
      
      <guid>https://onthedock.github.io/post/211229-tema-personalizado-de-oh-my-zsh/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://ohmyz.sh/&#34;&gt;Oh My Zsh&lt;/a&gt; es un &lt;em&gt;framework&lt;/em&gt; para gestionar la configuración de Zsh.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://es.wikipedia.org/wiki/Zsh&#34;&gt;Zsh&lt;/a&gt; es un &lt;em&gt;shell&lt;/em&gt; alternativo a &lt;a href=&#34;https://es.wikipedia.org/wiki/Bash&#34;&gt;BASH&lt;/a&gt;, el &lt;em&gt;shell&lt;/em&gt; por defecto de la mayoría de distribuciones Linux. Sin embargo, desde Mac OS Catalina, Zsh se convirtió en el &lt;em&gt;shell&lt;/em&gt; del terminal de los Mac. Este hecho, junto a la &lt;em&gt;vistosidad&lt;/em&gt; de los temas que pueden aplicarse al &lt;em&gt;prompt&lt;/em&gt; en Zsh (en especial, gracias a Oh My Zsh), ha convertido Zsh en un &lt;em&gt;shell&lt;/em&gt; cada vez más popular.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt; : &lt;a href=&#34;https://github.com/unixorn/&#34;&gt;Joe Block&lt;/a&gt; ha sido tan amable de incluir mi tema de Oh My Zsh en la lista que mantiene en GitHub &lt;a href=&#34;https://github.com/unixorn/awesome-zsh-plugins&#34;&gt;unixorn/awesome-zsh-plugins&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Automatiza la instalación de Longhorn</title>
      <link>https://onthedock.github.io/post/211113-automatiza-la-instalacion-de-longhorn/</link>
      <pubDate>Sat, 13 Nov 2021 19:53:33 +0100</pubDate>
      
      <guid>https://onthedock.github.io/post/211113-automatiza-la-instalacion-de-longhorn/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://longhorn.io/&#34;&gt;Longhorn&lt;/a&gt; es una solución de almacenamiento distribuido de bloques para Kubernetes. Recientemente ha sido incluido en la &lt;a href=&#34;https://www.cncf.io/blog/2021/11/04/longhorn-brings-cloud-native-distributed-storage-to-the-cncf-incubator/&#34;&gt;&lt;em&gt;incubadora&lt;/em&gt; de la CNCF&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Longhorn proporciona métricas para Prometheus y es el complemento perfecto para proporcionar almacenamiento a las aplicaciones desplegadas sobre Kubernetes.&lt;/p&gt;
&lt;p&gt;En esta entrada automatizamos las &lt;a href=&#34;https://longhorn.io/docs/1.2.2/deploy/install/install-with-helm/&#34;&gt;instrucciones oficiales&lt;/a&gt; de despliegue usando Helm para desplegarlo sobre Kubernetes.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Actualizar k3s con k3sup</title>
      <link>https://onthedock.github.io/post/211111-actualizar-k3s-con-k3sup/</link>
      <pubDate>Thu, 11 Nov 2021 21:32:41 +0100</pubDate>
      
      <guid>https://onthedock.github.io/post/211111-actualizar-k3s-con-k3sup/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/alexellis/k3sup&#34;&gt;k3sup&lt;/a&gt; es una herramienta que permite instalar clústers de Kubernetes basados en &lt;a href=&#34;https://k3s.io/&#34;&gt;K3s&lt;/a&gt; &lt;a href=&#34;https://github.com/alexellis/k3sup#demo-&#34;&gt;en menos de un minuto&lt;/a&gt;. Pero acabo de descubrir que además, también permite actualizar el clúster.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Script para crear usuarios en Kubernetes (y en K3s)</title>
      <link>https://onthedock.github.io/post/211010-crear-usuarios-en-k3s-script/</link>
      <pubDate>Sun, 10 Oct 2021 08:51:51 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/211010-crear-usuarios-en-k3s-script/</guid>
      <description>&lt;p&gt;El &lt;em&gt;script&lt;/em&gt; automatiza el proceso completo de creación de un usuario en Kubernetes. Como el proceso es algo diferente en K3s, esta entrada se centra más en este caso &lt;em&gt;especial&lt;/em&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Crear usuarios en Kubernetes (y en K3s)</title>
      <link>https://onthedock.github.io/post/211010-crear-usuarios-en-k3s/</link>
      <pubDate>Sun, 10 Oct 2021 07:08:56 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/211010-crear-usuarios-en-k3s/</guid>
      <description>&lt;p&gt;En Kubernetes no existe el concepto de usuario; sólo se confía en quien presente un certificado firmado por la CA del clúster.&lt;/p&gt;
&lt;p&gt;Para obtener los certificados de la CA, lo más sencillo es acceder a un nodo &lt;em&gt;server&lt;/em&gt;; los certificados (&lt;code&gt;ca.cert&lt;/code&gt; y &lt;code&gt;ca.key&lt;/code&gt;) se encuentran en &lt;code&gt;/etc/kubernetes/pki/&lt;/code&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Existe otra opción que pasa por generar un objeto &lt;code&gt;CertificateSigningRequest&lt;/code&gt; para firmar el certificado de usuario.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;El proceso implica generar un certificado al usuario, solicitar que lo firme la &lt;em&gt;Certificate Authority&lt;/em&gt; del clúster y después autenticarse con él.&lt;/p&gt;
&lt;p&gt;Para poder autenticarse en el clúster, necesitamos configurar un cliente, por ejemplo creando un fichero &lt;code&gt;kubeconfig&lt;/code&gt; para &lt;strong&gt;kubectl&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Finalmente, el nuevo usuario debe estar autorizado a realizar algunas acciones en el clúster; para ello definiremos un conjunto de permisos en un &lt;em&gt;Role&lt;/em&gt; o un &lt;em&gt;ClusterRole&lt;/em&gt; y lo asociaremos al usuario mediante un &lt;em&gt;RoleBinding&lt;/em&gt; (o un &lt;em&gt;ClusterRoleBinding&lt;/em&gt;).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Provisionar Kubernetes con Vagrant y K3sup - 2a parte</title>
      <link>https://onthedock.github.io/post/210920-provisionar-kubernetes-con-vagrant-y-k3sup-2/</link>
      <pubDate>Mon, 20 Sep 2021 19:25:15 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/210920-provisionar-kubernetes-con-vagrant-y-k3sup-2/</guid>
      <description>&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://onthedock.github.io/post/210919-provisionar-kubernetes-con-vagrant-y-k3sup-1/&#34;&gt;Provisionar Kubernetes con Vagrant y K3sup - 1a parte&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://onthedock.github.io/post/210920-provisionar-kubernetes-con-vagrant-y-k3sup-2/&#34;&gt;Provisionar Kubernetes con Vagrant y K3sup - 2a parte&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;En la entrada anterior, tenemos un fichero &lt;code&gt;Vagrantfile&lt;/code&gt; que permite provisionar máquinas virtuales a partir de la imagen base seleccionada. Las máquinas generadas están configuradas a nivel de hipervisor, con los recursos de CPU y memoria elegidos. También se ha configurado el nombre de la máquina virtual y se ha establecido una IP estática. También se han deshabilitado algunos aspectos específicos de Vagrant, como las carpetas compartidas o la comprobación de actualizaciones de la imagen base.&lt;/p&gt;
&lt;p&gt;En esta segunda parte nos centramos en la configuración del sistema operativo aprovechando la capacidad de Vagrant de ejecutar &lt;em&gt;scripts&lt;/em&gt; en las máquinas creadas.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Provisionar Kubernetes con Vagrant y K3sup - 1a parte</title>
      <link>https://onthedock.github.io/post/210919-provisionar-kubernetes-con-vagrant-y-k3sup-1/</link>
      <pubDate>Sun, 19 Sep 2021 10:31:17 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/210919-provisionar-kubernetes-con-vagrant-y-k3sup-1/</guid>
      <description>&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://onthedock.github.io/post/210919-provisionar-kubernetes-con-vagrant-y-k3sup-1/&#34;&gt;Provisionar Kubernetes con Vagrant y K3sup - 1a parte&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://onthedock.github.io/post/210920-provisionar-kubernetes-con-vagrant-y-k3sup-2/&#34;&gt;Provisionar Kubernetes con Vagrant y K3sup - 2a parte&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Desde mis inicios con Kubernetes, una de las cosas más pesadas del proceso de creación del clúster (para mí) ha sido el tener que desplegar y configurar las máquinas que formarán el clúster.&lt;/p&gt;
&lt;p&gt;En esta entrada explico algo de mi relación histórica con Vagrant y el proceso de automatización que estoy siguiendo para desplegar clústers locales (&lt;em&gt;no cloud&lt;/em&gt;) en mi laboratorio.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Documentación como código - 2a parte</title>
      <link>https://onthedock.github.io/post/210816-documentacion-como-codigo-prueba-de-concepto-2a-parte/</link>
      <pubDate>Mon, 16 Aug 2021 20:16:34 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/210816-documentacion-como-codigo-prueba-de-concepto-2a-parte/</guid>
      <description>&lt;p&gt;En la &lt;a href=&#34;https://onthedock.github.io/post/210731-documentacion-como-codigo-poc-1a-parte/&#34;&gt;entrada anterior&lt;/a&gt; indicaba la idea general en la que estoy trabajando para implementar una solución funcional de &lt;em&gt;documentación como código&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Reducida a su mínima expresión, la prueba de concepto lo que tiene que mostrar es la &lt;em&gt;velocidad&lt;/em&gt; a la que se puede ir actualizando la documentación si se sigue el mismo proceso -y herramientas- de desarrollo a las que está acostumbrado el equipo de proyecto.&lt;/p&gt;
&lt;p&gt;No se trata de crear un sistema listo para producción, sino de mostrar &lt;em&gt;algo&lt;/em&gt; que &lt;strong&gt;funcione&lt;/strong&gt; ™ más o menos, como funcionaría la solución final.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Documentación como código - 1a parte</title>
      <link>https://onthedock.github.io/post/210731-documentacion-como-codigo-poc-1a-parte/</link>
      <pubDate>Sat, 31 Jul 2021 07:33:11 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/210731-documentacion-como-codigo-poc-1a-parte/</guid>
      <description>&lt;p&gt;Una de las claves del éxito de un proyecto es proporcionar una buena documentación. En los proyectos &lt;em&gt;open source&lt;/em&gt; cada vez se da más importancia a tener documentación de calidad y completamente actualizada.&lt;/p&gt;
&lt;p&gt;En el pasado -aunque tristemente, sigue siendo una práctica muy habitual- la documentación se dejaba como una tarea a realizar una vez el proyecto estuviera prácticamente completado, antes de la entrega al cliente. El problema de esta aproximación es que los proyectos suelen encontrar problemas que hace que las fechas previstas inicialmente no se cumplan, o que se cumplan &lt;em&gt;artificialmente&lt;/em&gt; entregando sin haber completado tareas como por ejemplo, la documentación.&lt;/p&gt;
&lt;p&gt;Con la introducción de las metodologías ágiles, en cada tarea que se crea en el backlog se incluye la documentación como parte del criterio de aceptación, explícita o implícitamente.&lt;/p&gt;
&lt;p&gt;En vez de generar un documento enorme, se suele optar por formatos ligeros como &lt;a href=&#34;https://daringfireball.net/projects/markdown/&#34;&gt;markdown&lt;/a&gt;, como paso previo a generar una versión web para el usuario final. Gracias a herramientas como &lt;a href=&#34;https://pandoc.org/&#34;&gt;pandoc&lt;/a&gt;, también es fácil generar documentación final en prácticamente cualquier otro formato que se requiera, como los habituales Microsoft Word o PDF.&lt;/p&gt;
&lt;p&gt;De esta forma, el equipo de desarrollo trabaja en paralelo en la creación de nuevas funcionalidades a la vez que las documenta.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Actualiza la versión de Alpine Linux</title>
      <link>https://onthedock.github.io/post/210712-actualiza-version-alpine/</link>
      <pubDate>Mon, 12 Jul 2021 18:36:49 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/210712-actualiza-version-alpine/</guid>
      <description>&lt;p&gt;Hace unos días actualicé la versión de &lt;a href=&#34;https://pop.system76.com/&#34;&gt;Pop_OS!&lt;/a&gt; en uno de los equipos de escritorio en los que tengo Linux instalado en casa.&lt;/p&gt;
&lt;p&gt;Hoy estaba revisando las máquinas virtuales y mientras actualizaba los paquetes de una VM con Ubuntu 20.04 he pensado cómo podría actualizar de Alpine 3.13 a la última versión publicada, Alpine 3.14.&lt;/p&gt;
&lt;p&gt;El proceso no puede ser más sencillo.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Velero - Backup Y Disaster Recovery Para Kubernetes (III) Recuperación desde una copia de seguridad</title>
      <link>https://onthedock.github.io/post/210407-velero-backup-y-disaster-recovery-para-kubernetes-iii/</link>
      <pubDate>Wed, 07 Apr 2021 19:54:57 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/210407-velero-backup-y-disaster-recovery-para-kubernetes-iii/</guid>
      <description>&lt;p&gt;Velero realiza copias de seguridad (puntuales o recurrentes) para recuperarnos con rapidez de un desastre en el clúster de Kubernetes.&lt;/p&gt;
&lt;p&gt;En la entrada anterior &lt;a href=&#34;https://onthedock.github.io/post/210405-velero-backup-y-disaster-recovery-para-kubernetes-ii/&#34;&gt;Velero - Backup y Disaster Recovery para Kubernetes (II) Crear copia de seguridad&lt;/a&gt; desplegamos una aplicación de prueba en el clúster (dos réplicas de Nginx en el &lt;em&gt;Namespace&lt;/em&gt; &lt;code&gt;nginx-example&lt;/code&gt;). Simulamos la pérdida &amp;ldquo;accidental&amp;rdquo; del &lt;em&gt;Namespace&lt;/em&gt; &lt;code&gt;nginx-example&lt;/code&gt; para ver cómo recuperarnos usando la copia creada por Velero.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Velero - Backup y Disaster Recovery para Kubernetes (II) Crear copia de seguridad</title>
      <link>https://onthedock.github.io/post/210405-velero-backup-y-disaster-recovery-para-kubernetes-ii/</link>
      <pubDate>Mon, 05 Apr 2021 13:33:38 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/210405-velero-backup-y-disaster-recovery-para-kubernetes-ii/</guid>
      <description>&lt;p&gt;En la entrada anterior &lt;a href=&#34;https://onthedock.github.io/post/210405-velero-backup-y-disaster-recovery-para-kubernetes-ii/&#34;&gt;Velero - Backup y Disaster Recovery para Kubernetes (I) Instalación&lt;/a&gt; vimos cómo instalar Velero en Kubernetes. Usamos el comando &lt;code&gt;velero install&lt;/code&gt; lanzado desde un &lt;em&gt;Job&lt;/em&gt;  en la línea de la &lt;em&gt;filosofía&lt;/em&gt; GitOps.&lt;/p&gt;
&lt;p&gt;En esta entrada veremos cómo crear copias de seguridad puntuales y recurrentes usando la herramienta de línea de comandos &lt;strong&gt;velero&lt;/strong&gt; (lanzada desde un &lt;em&gt;Job&lt;/em&gt;)&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Velero - Backup y Disaster Recovery para Kubernetes (I) Instalación</title>
      <link>https://onthedock.github.io/post/210405-velero-backup-y-disaster-recovery-para-kubernetes-i/</link>
      <pubDate>Mon, 05 Apr 2021 11:35:38 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/210405-velero-backup-y-disaster-recovery-para-kubernetes-i/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;htps:/velero.io&#34;&gt;Velero&lt;/a&gt; es una herramienta de código abierto que permite realizar copias de seguridad, restaurarlas y migrar recursos de Kubernetes entre clústers (lo que también permite recuperar un clúster en caso de desastre).&lt;/p&gt;
&lt;p&gt;Velero soporta diferentes proveedores en los que almacenar las copias de seguridad que realiza. La lista completa y actualizada se encuentra en &lt;a href=&#34;https://velero.io/docs/v1.5/supported-providers/&#34;&gt;Providers&lt;/a&gt;. En mi caso, voy a utilizar MinIO, que es compatible con AWS S3 y que tengo desplegado localmente en Kubernetes.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Configura MinIO en Kubernetes usando Jobs y el cliente de MinIO &#39;mc&#39;</title>
      <link>https://onthedock.github.io/post/210403-configura-minio-en-k8s-usando-jobs-y-el-cliente-mc/</link>
      <pubDate>Sat, 03 Apr 2021 09:58:50 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/210403-configura-minio-en-k8s-usando-jobs-y-el-cliente-mc/</guid>
      <description>&lt;p&gt;En la entrada anterior, &lt;a href=&#34;https://onthedock.github.io/post/210403-minio-en-kubernetes/&#34;&gt;MinIO en Kubernetes&lt;/a&gt;, explicaba cómo desplegar MinIO en Kubernetes (de forma manual).&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.min.io/docs/minio-client-quickstart-guide.html&#34;&gt;&lt;code&gt;mc&lt;/code&gt;&lt;/a&gt; se puede usar como herramienta de línea de comandos o como contenedor &lt;a href=&#34;https://hub.docker.com/r/minio/mc&#34;&gt;&lt;code&gt;minio/mc&lt;/code&gt;&lt;/a&gt;; sin embargo, en esta entrada veremos cómo usarlo en &lt;em&gt;Jobs&lt;/em&gt; de Kubernetes para configurar el &lt;em&gt;alias&lt;/em&gt; de un servidor de MinIO y crear un &lt;em&gt;bucket&lt;/em&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Minio en Kubernetes</title>
      <link>https://onthedock.github.io/post/210403-minio-en-kubernetes/</link>
      <pubDate>Sat, 03 Apr 2021 09:02:58 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/210403-minio-en-kubernetes/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://min.io/&#34;&gt;MinIO&lt;/a&gt; proporciona almacenamiento de objetos compatible con AWS S3. Desde la última vez que revisé este producto, MinIO ha crecido hasta convertirse en una solución de calidad empresarial.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;También han cambiado el logo, y por lo que veo, el &amp;ldquo;flamenco&amp;rdquo; o lo que sea el animal del logo ha quedado relegado al &lt;code&gt;favicon&lt;/code&gt; y el &lt;em&gt;footer&lt;/em&gt; de la página web&amp;hellip;Yo mantendré por ahora el logo &amp;ldquo;antiguo&amp;rdquo; (que curiosamente, tiene al pájaro mirando hacia la izquierda &lt;code&gt;¯\_(ツ)_/¯&lt;/code&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;En este artículo, voy a desplegarlo sobre Kubernetes de forma manual con un sólo servidor. Usaremos el almacenamiento en MinIO como destino de las copias de seguridad del clúster de Kubernetes usando Velero (en un próximo artículo).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[Solucionado] Instalación de MkDocs en Alpine y en MacOS (Catalina)</title>
      <link>https://onthedock.github.io/post/201013-instalar-mkdocs-en-alpine/</link>
      <pubDate>Tue, 13 Oct 2020 18:43:49 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/201013-instalar-mkdocs-en-alpine/</guid>
      <description>&lt;p&gt;Estos días he encontrado un extraño error a la hora de instalar &lt;a href=&#34;https://www.mkdocs.org/&#34;&gt;MkDocs&lt;/a&gt;, pero por lo que parece, no es un problema específico ni de MkDocs ni de Alpine&amp;hellip;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Imagen base de un registry diferente a Docker Hub</title>
      <link>https://onthedock.github.io/post/200926-imagenes-de-registries-diferentes-a-dockerhub/</link>
      <pubDate>Sat, 26 Sep 2020 14:02:56 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/200926-imagenes-de-registries-diferentes-a-dockerhub/</guid>
      <description>&lt;p&gt;A continuación de la entrada anterior, &lt;a href=&#34;https://onthedock.github.io/post/200926-multistage-builds-con-docker/&#34;&gt;Multi-stage builds con Docker&lt;/a&gt;, la idea es explicar cómo usar una imagen base de un registro diferente a Docker Hub, que es el registro por defecto para Docker.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Multi-stage builds con Docker</title>
      <link>https://onthedock.github.io/post/200926-multistage-builds-con-docker/</link>
      <pubDate>Sat, 26 Sep 2020 09:19:18 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/200926-multistage-builds-con-docker/</guid>
      <description>&lt;p&gt;Los &lt;em&gt;multi-stage builds&lt;/em&gt; son una funcionalidad introducida en Docker en la versión 17.05 que proporciona importantes ventajas respecto a los &lt;em&gt;builds&lt;/em&gt; &amp;ldquo;todo-en-uno&amp;rdquo;, principalmente en cuanto a &lt;strong&gt;seguridad&lt;/strong&gt; y &lt;strong&gt;tamaño&lt;/strong&gt; de la imagen resultante.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Resetear el password de administrador en Gitea</title>
      <link>https://onthedock.github.io/post/200925-resetear-el-password-del-admin-en-gitea/</link>
      <pubDate>Fri, 25 Sep 2020 21:31:30 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/200925-resetear-el-password-del-admin-en-gitea/</guid>
      <description>&lt;p&gt;Uno de los problemas de los entornos de laboratorio es que son &lt;em&gt;fungibles&lt;/em&gt;, casi de &amp;ldquo;usar y tirar&amp;rdquo;. Un efecto colateral es que cosas como las credenciales no se gestionan correctamente, se pone la primera que se nos ocurre y después&amp;hellip; pues no hay manera de volver a acceder.&lt;/p&gt;
&lt;p&gt;En mi caso me he encontrado en esta situación con Gitea y en esta entrada voy a documentar cómo establecer una nueva contraseña para el usuario &lt;em&gt;administrador&lt;/em&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Configurar hostname en K3OS</title>
      <link>https://onthedock.github.io/post/200923-configurar-hostname-en-k3os/</link>
      <pubDate>Wed, 23 Sep 2020 21:53:31 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/200923-configurar-hostname-en-k3os/</guid>
      <description>&lt;p&gt;Una de las cosas que no me resultó evidente al empezar a usar &lt;a href=&#34;https://k3os.io&#34;&gt;K3OS&lt;/a&gt; es que el sistema de ficheros tiene algunas &lt;em&gt;particularidades&lt;/em&gt; con las que es &lt;strong&gt;absolutamente&lt;/strong&gt; necesario estar familiarizado; por ejemplo, que toda la carpeta &lt;code&gt;/etc&lt;/code&gt; es &lt;strong&gt;EFÍMERA&lt;/strong&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>IP estática en KVM</title>
      <link>https://onthedock.github.io/post/200710-ip-estatica-en-kvm/</link>
      <pubDate>Fri, 10 Jul 2020 18:16:34 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/200710-ip-estatica-en-kvm/</guid>
      <description>&lt;p&gt;Las máquinas virtuales en KVM obtienen una IP en el rango &lt;code&gt;192.168.122.2&lt;/code&gt; a &lt;code&gt;192.168.122.254&lt;/code&gt; (puedes comprobarlo mediante &lt;code&gt;virsh net-edit default&lt;/code&gt; (para la red &lt;em&gt;default&lt;/em&gt;)).&lt;/p&gt;
&lt;p&gt;Asignar una IP estática a una máquina virtual en KVM consiste en tres pasos:&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Lanzar instancias en KVM y configurarlas con Cloudinit</title>
      <link>https://onthedock.github.io/post/200706-lanzar-instancias-en-kvm-y-configurarlas-con-cloudinit/</link>
      <pubDate>Mon, 06 Jul 2020 20:27:27 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/200706-lanzar-instancias-en-kvm-y-configurarlas-con-cloudinit/</guid>
      <description>&lt;p&gt;En la &lt;a href=&#34;https://onthedock.github.io/post/200627-creacion-de-vm-en-kvm-con-virsh/&#34;&gt;entrada anterior&lt;/a&gt; describía los pasos para lanzar una instancia en KVM usando &lt;code&gt;virsh&lt;/code&gt;. Pero aunque esto resuelve la creación de la máquina virtual, todavía tenemos que realizar la configuración manual del sistema operativo, establecer el &lt;code&gt;hostname&lt;/code&gt;, crear usuarios, instalar de paquetes, etc.&lt;/p&gt;
&lt;p&gt;Usando &lt;a href=&#34;https://cloudinit.readthedocs.io&#34;&gt;&lt;code&gt;cloud-init&lt;/code&gt;&lt;/a&gt; podemos automatizar el proceso de configuración tal y como lo hacen los proveedores de cloud público (AWS, Azure, Google Cloud&amp;hellip;)&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Creación de una máquina virtual en KVM con virsh</title>
      <link>https://onthedock.github.io/post/200627-creacion-de-vm-en-kvm-con-virsh/</link>
      <pubDate>Sat, 27 Jun 2020 17:35:24 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/200627-creacion-de-vm-en-kvm-con-virsh/</guid>
      <description>&lt;p&gt;En la entrada &lt;a href=&#34;https://onthedock.github.io/post/200627-instalacion-de-kvm-en-ubuntu-20.04/&#34;&gt;Instalación de KVM en Ubuntu 20.04&lt;/a&gt; instalamos KVM; ahora empieza lo divertido y vamos a crear una máquina virtual en KVM desde línea de comando con &lt;code&gt;virsh&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Instalación de KVM en Ubuntu 20.04</title>
      <link>https://onthedock.github.io/post/200627-instalacion-de-kvm-en-ubuntu-20.04/</link>
      <pubDate>Sat, 27 Jun 2020 16:27:29 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/200627-instalacion-de-kvm-en-ubuntu-20.04/</guid>
      <description>&lt;p&gt;Después de convertir el equipo de laboratorio en mi equipo de escritorio, poco a poco lo estoy convirtiendo de nuevo en un &lt;strong&gt;equipo de laboratorio&lt;/strong&gt; :D&lt;/p&gt;
&lt;p&gt;Después del desagradable sabor de boca con &lt;a href=&#34;https://wiki.gnome.org/Apps/Boxes&#34;&gt;GNOME Boxes&lt;/a&gt; que me dejó mi &lt;a href=&#34;https://onthedock.github.io/post/200620-odiando-fedora-en-menos-de-1-hora/&#34;&gt;efímera prueba en Fedora&lt;/a&gt;, he recuperado el entorno basado en KVM (aunque no tuviera éxito con Proxmox VE).&lt;/p&gt;
&lt;p&gt;En esta entrada describo los pasos seguidos para instalar KVM en Ubuntu 20.04 con las notas que he ido tomando durante el proceso.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Odiando Fedora en menos de 1 hora</title>
      <link>https://onthedock.github.io/post/200620-odiando-fedora-en-menos-de-1-hora/</link>
      <pubDate>Sat, 20 Jun 2020 19:37:41 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/200620-odiando-fedora-en-menos-de-1-hora/</guid>
      <description>&lt;p&gt;Hace aproximadamente seis meses cambié de piso; el cambio no le sentó bien a mi equipo de laboratorio, ya que dejó de estar conectado por cable al router y pasó a depender de una tarjeta wifi PCI. Proxmox VE, que era la distro que usaba para virtualizar, nunca reconoció la tarjeta por lo que finalmente tuve que instalar un Windows 10 y usar Virtual Box.&lt;/p&gt;
&lt;p&gt;Hoy he decidido volver a instalar Linux en el equipo; el primer problema lo he encontrado porque parece que AMD Radeon y Linux no se llevan bien, por lo que no puedo instalar si no paso el parámetro &lt;code&gt;nomodeset&lt;/code&gt; como opción de arranque (ya me había pasado antes, pero no deja de ser igual de frustante &lt;a href=&#34;https://onthedock.github.io/post/200221-nomodeset/&#34;&gt;Instalación de Linux en modo gráfico seguro&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Pulsando Ctrl+D he podido pasar el parámetro en la instalación de ProxMox VE e instalarlo. En la documentación de ProxMox VE se indica cómo configurar la red wifi y he validado que el chip de la tarjeta wifi está soportado en Linux&amp;hellip; Pero aunque &lt;code&gt;modinfo rt2500pci&lt;/code&gt; indica que se ha detectado, no he encontrado la manera de habilitarla&amp;hellip;&lt;/p&gt;
&lt;p&gt;Ese ha sido el primero de muchos suplicios que me ha deparado este equipo de laboratorio&amp;hellip;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Instalar OKD 3.11 en Centos 7 (Minimal)</title>
      <link>https://onthedock.github.io/post/200401-instalar-okd311-en-centos7/</link>
      <pubDate>Wed, 01 Apr 2020 18:51:15 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/200401-instalar-okd311-en-centos7/</guid>
      <description>&lt;p&gt;La instalación de &lt;a href=&#34;https://www.okd.io/&#34;&gt;OKD&lt;/a&gt;, la distribución &lt;em&gt;opensource&lt;/em&gt; de &lt;a href=&#34;https://www.openshift.com/&#34;&gt;OpenShift&lt;/a&gt; es compleja y tiene unos prerequisitos que, al menos en mi caso, me han echado un poco &lt;em&gt;pa&amp;rsquo;trás&lt;/em&gt; a la hora de instalarlo.&lt;/p&gt;
&lt;p&gt;Recientemente he encontrado una instalación basada completamente en contenedores que, aunque no es exactamente igual a la versión &lt;em&gt;estándard&lt;/em&gt;, permite familiarizarse con el producto, el despliegue de aplicaciones, etc&amp;hellip;&lt;/p&gt;
&lt;p&gt;En esta entrada indico cómo instalar OKD 3.11 sobre Centos 7 (Minimal).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Instalación de Linux en modo gráfico seguro</title>
      <link>https://onthedock.github.io/post/200221-nomodeset/</link>
      <pubDate>Sat, 21 Mar 2020 21:20:25 +0100</pubDate>
      
      <guid>https://onthedock.github.io/post/200221-nomodeset/</guid>
      <description>&lt;p&gt;Los &lt;em&gt;kernels&lt;/em&gt; de Linux modernos han movido la configuración de los modos de vídeo al &lt;em&gt;kernel&lt;/em&gt;. Algunas tarjetas gráficas no funcionan correctamente tras este cambio, por lo que el proceso de instalación de Linux falla de un modo u otro; en mi caso, el sistema se reinicia a los pocos segundos de empezar el proceso de arranque del sistema, aunque lo habitual es que la pantalla se quede &amp;ldquo;en blanco&amp;rdquo;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Por qué Remote-SSH no funciona con Alpine Linux</title>
      <link>https://onthedock.github.io/post/200119-porque-remote-ssh-no-funciona-con-alpine/</link>
      <pubDate>Sun, 19 Jan 2020 12:56:18 +0100</pubDate>
      
      <guid>https://onthedock.github.io/post/200119-porque-remote-ssh-no-funciona-con-alpine/</guid>
      <description>&lt;p&gt;En la entrada sobre &lt;a href=&#34;https://onthedock.github.io/post/200118-configurar-vscode-para-editar-codigo-remoto/&#34;&gt;cómo configurar Visual Studio Code para editar código remoto&lt;/a&gt; con la extensión &lt;em&gt;Remote - SSH&lt;/em&gt; indicaba cómo configurar Code para editar código en una máquina remota.&lt;/p&gt;
&lt;p&gt;Mi intención era usar una máquina ligera, con Alpine Linux como equipo remoto; al fin y al cabo, sólo necesito Python. Con esa idea escribí la entrada &lt;a href=&#34;https://onthedock.github.io/post/200118-alpine-para-desarrollo-con-python/&#34;&gt;Alpine para desarrollo con Python&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Sin embargo, &lt;em&gt;Remote - SSH&lt;/em&gt; no funciona cuando la máquina remota es Alpine Linux.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Regenerar certificado SSL en Proxmox</title>
      <link>https://onthedock.github.io/post/200119-regenerar-certificado-ssl-proxmox/</link>
      <pubDate>Sun, 19 Jan 2020 11:01:05 +0100</pubDate>
      
      <guid>https://onthedock.github.io/post/200119-regenerar-certificado-ssl-proxmox/</guid>
      <description>&lt;p&gt;Hace relativamente poco que he cambiado de piso, lo que ha afectado a la &lt;em&gt;toopología&lt;/em&gt; de la red de casa, en particular, ha sido necesario cambiar la IP del equipo de laboratorio donde tengo instalado &lt;a href=&#34;https://www.proxmox.com/en/&#34;&gt;Proxmox VE&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Como el acceso a la consola web de Proxmox VE se realiza a través de https, los navegadores rechazaban la conexión al tratarse de un certificado inválido (emitido para una IP que no coincide con la actual) (además de la habitual alerta indicando que la entidad certificadora que firma el certificado no se reconoce).&lt;/p&gt;
&lt;p&gt;En esta entrada indico cómo regenerar el certificado SSL autofirmado por Proxmox VE.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Configurar Visual Studio Code para editar código remoto</title>
      <link>https://onthedock.github.io/post/200118-configurar-vscode-para-editar-codigo-remoto/</link>
      <pubDate>Sat, 18 Jan 2020 20:52:06 +0100</pubDate>
      
      <guid>https://onthedock.github.io/post/200118-configurar-vscode-para-editar-codigo-remoto/</guid>
      <description>&lt;p&gt;En la entrada &lt;a href=&#34;https://onthedock.github.io/post/200118-alpine-para-desarrollo-con-python/&#34;&gt;Alpine para desarrollo con Python&lt;/a&gt; indiqué cómo configurar una máquina virtual con Alpine Linux para desarrollar con Python.
Aunque es posible editar código en Vi o Emacs en un sistema sin entorno gráfico, yo me siento más cómodo usando algo como Visual Studio Code.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;No es posible usar &lt;em&gt;Remote - SSH&lt;/em&gt; con Alpine Linux; más detalles, en &lt;a href=&#34;https://onthedock.github.io/post/200119-porque-remote-ssh-no-funciona-con-alpine/&#34;&gt;¿Por qué Remote - SSH no funciona con Alpine?&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;La funcionalidad de Visual Studio Code -VS Code o simplemente, Code- puede ampliarse mediante el uso de &lt;a href=&#34;https://code.visualstudio.com/docs/editor/extension-gallery&#34;&gt;&lt;em&gt;extensiones&lt;/em&gt;&lt;/a&gt;.
En esta entrada explico cómo usar Code desde tu equipo para editar código remoto a través de SSH.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Alpine para desarrollo con Python</title>
      <link>https://onthedock.github.io/post/200118-alpine-para-desarrollo-con-python/</link>
      <pubDate>Sat, 18 Jan 2020 19:00:21 +0100</pubDate>
      
      <guid>https://onthedock.github.io/post/200118-alpine-para-desarrollo-con-python/</guid>
      <description>&lt;p&gt;Para practicar con Python, he instalado una máquina virtual con Alpine 3.9. En esta entrada recojo los diferentes pasos que he realizado para configurarla como entorno de ejecución de Python 3.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Como enviar un proceso a segundo plano (y recuperarlo después)</title>
      <link>https://onthedock.github.io/post/191208-como-enviar-un-proceso-a-segundo-plano-y-recuperarlo-despues/</link>
      <pubDate>Sun, 08 Dec 2019 08:19:29 +0100</pubDate>
      
      <guid>https://onthedock.github.io/post/191208-como-enviar-un-proceso-a-segundo-plano-y-recuperarlo-despues/</guid>
      <description>&lt;p&gt;Cuando se lanza un comando en la terminal -en general-, hace lo que tiene que hacer y termina. Sin embargo, algunos procesos se ejecutan indefinidamente (hasta que el usuario los termina usando &lt;code&gt;Ctrl+C&lt;/code&gt;). En este caso, el terminal queda &lt;em&gt;bloqueado&lt;/em&gt;, en el sentido de que el usuario no puede lanzar nuevos comandos.&lt;/p&gt;
&lt;p&gt;En esta entrada indico las diferentes opciones que tienes para poder gestionar comandos en un terminal de Linux.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Error al actualizar el sistema</title>
      <link>https://onthedock.github.io/post/190519-error-al-actualizar-el-sistema/</link>
      <pubDate>Sun, 19 May 2019 18:11:23 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/190519-error-al-actualizar-el-sistema/</guid>
      <description>&lt;p&gt;Después de resolver el &lt;a href=&#34;https://onthedock.github.io/post/190519-iniciar-dnsmasq-durante-el-inicio-del-sistema/&#34;&gt;problema con el DNS&lt;/a&gt; en el equipo de laboratorio tenía varias actualizaciones pendientes de instalar.&lt;/p&gt;
&lt;p&gt;Sin embargo, una de las actualizaciones ha fallado por no tener bien resueltas las depedencias:&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Iniciar dnsmasq durante el inicio del sistema</title>
      <link>https://onthedock.github.io/post/190519-iniciar-dnsmasq-durante-el-inicio-del-sistema/</link>
      <pubDate>Sun, 19 May 2019 08:42:05 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/190519-iniciar-dnsmasq-durante-el-inicio-del-sistema/</guid>
      <description>&lt;p&gt;dnsmasq es un servidor DNS y por tanto debería estar siempre arrancado, para responder  a las peticiones de resolución de nombres precedentes del resto de máquinas.&lt;/p&gt;
&lt;p&gt;La instalación en Alpine Linux no configura el servicio de dnsmasq para iniciar durante el arranque del sistema, por lo que debe iniciarse manualmente.&lt;/p&gt;
&lt;p&gt;Esta no es la configuración que queremos, así que vamos a corregirla.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Cambiando a Elementary</title>
      <link>https://onthedock.github.io/post/190511-cambiando-a-elementary/</link>
      <pubDate>Sat, 11 May 2019 07:44:35 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/190511-cambiando-a-elementary/</guid>
      <description>&lt;p&gt;Hace unos meses me regalaron un &lt;a href=&#34;https://es.msi.com/Desktop/Cubi-3-Silent-7m/Overview&#34;&gt;Cubi 3 Silent&lt;/a&gt; de MSI. Como tengo un exceso de equipos por casa y no tenía memoria DDR4 o discos M.2, el equipo se convirtió en una especie de pisapapeles &lt;em&gt;high-tech&lt;/em&gt; y poco más.&lt;/p&gt;
&lt;p&gt;Quiero racionalizar un poco el &lt;em&gt;cacharrerío&lt;/em&gt; que acumulo, así que he decidido renovar los viejos portátiles &lt;a href=&#34;https://www.dell.com/support/home/us/en/04/product-support/product/latitude-d630/drivers&#34;&gt;Dell D630&lt;/a&gt; y sustituirlos por el Cubi 3.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Cómo habilitar qemu-guest-agent en Alpine Linux</title>
      <link>https://onthedock.github.io/post/190429-como-habilitar-qemu-guest-agent-en-alpine/</link>
      <pubDate>Mon, 29 Apr 2019 19:50:54 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/190429-como-habilitar-qemu-guest-agent-en-alpine/</guid>
      <description>&lt;p&gt;&lt;code&gt;qemu-guest-agent&lt;/code&gt; es un agente que puede instalarse en los sistemas invitados en Proxmox VE que permite obtener información sobre los sistemas corriendo en máquinas virtuales.
Uno de esos datos es la IP del sistema.&lt;/p&gt;
&lt;p&gt;Sin embargo, para los sistemas Alpine Linux, el servicio no arranca automáticamente.
Se puede habilitar de forma manual, pero lo ideal es que el &lt;em&gt;demonio&lt;/em&gt; arranque automáticamente durante el arranque.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Automatizando la gestion de máquinas virtuales con Ansible en Proxmox VE (spoiler, no me ha funcionado)</title>
      <link>https://onthedock.github.io/post/190428-automatizando-la-gestion-de-vms-con-ansible-en-proxmox/</link>
      <pubDate>Sun, 28 Apr 2019 20:11:52 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/190428-automatizando-la-gestion-de-vms-con-ansible-en-proxmox/</guid>
      <description>&lt;p&gt;Sigo dando pasos en el &lt;a href=&#34;https://onthedock.github.io/post/181124-roadmap/&#34;&gt;&lt;em&gt;roadmap&lt;/em&gt; que me marqué ya hace un tiempo&lt;/a&gt;, aunque mucho más lentamente de lo que había previsto.&lt;/p&gt;
&lt;p&gt;Después de decidir montar todo el laboratorio sobre KVM -y conseguirlo-, a nivel operativo no me resultaba cómodo.
Podía usar VirtManager (una solución gráfica), pero que sólo tenía instalada en un desktop con Linux que no suelo usar habitualmente, o hacer SSH contra el equipo de laboratorio y usar la línea de comandos para generar la máquina desde cero&amp;hellip;&lt;/p&gt;
&lt;p&gt;Al final, manteniéndome fiel al &lt;em&gt;objetivo final&lt;/em&gt; de automatizar la solución, decidí usar Proxmox VE (que usa Debian y KVM &amp;ldquo;bajo el capó&amp;rdquo;) y que además se integra con Ansible.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Cómo instalar pip</title>
      <link>https://onthedock.github.io/post/190428-como-instalar-pip/</link>
      <pubDate>Sun, 28 Apr 2019 13:25:13 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/190428-como-instalar-pip/</guid>
      <description>&lt;p&gt;&lt;code&gt;pip&lt;/code&gt; es el &lt;em&gt;instalador de paquetes&lt;/em&gt; de Python más usado.&lt;/p&gt;
&lt;p&gt;Sin embargo, nunca me ha resultado demasiado evidente cómo instalarlo, gracias a instrucciones tan poco afortunadas como las siguientes que he tenido la mala suerte de encontrar vía Google.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Instalación de Ansible en Debian 9</title>
      <link>https://onthedock.github.io/post/190419-instalacion-de-ansible-en-debian9/</link>
      <pubDate>Fri, 19 Apr 2019 17:04:12 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/190419-instalacion-de-ansible-en-debian9/</guid>
      <description>&lt;p&gt;Ansible permite automatizar la configuración de máquinas. Curiosamente, aunque he hablado de &lt;a href=&#34;https://onthedock.github.io/tags/ansible/&#34;&gt;Ansible&lt;/a&gt; en otras ocasiones, no había dedicado ninguna entrada al proceso de instalación y configuración.&lt;/p&gt;
&lt;p&gt;Vamos a corregir esta situación ;)&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Cómo clonar máquinas virtuales y usar virt-sysprep en KVM</title>
      <link>https://onthedock.github.io/post/190213-como-clonar-vms-y-usar-sysprep-en-kvm/</link>
      <pubDate>Wed, 13 Feb 2019 20:57:24 +0100</pubDate>
      
      <guid>https://onthedock.github.io/post/190213-como-clonar-vms-y-usar-sysprep-en-kvm/</guid>
      <description>&lt;p&gt;En la entrada anterior hemos visto cómo crear y clonar discos. Si el disco clonado contiene el sistema operativo de una máquina virtual, el clon continene identificadores que deberían ser únicos (como el &lt;em&gt;machine ID&lt;/em&gt;, direcciones MAC, claves SSH de &lt;em&gt;host&lt;/em&gt;, etc).&lt;/p&gt;
&lt;p&gt;Podemos usar &lt;code&gt;virt-sysprep&lt;/code&gt; para eliminar todos estos identificadores únicos.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Cómo gestionar discos en KVM</title>
      <link>https://onthedock.github.io/post/190211-como-gestionar-discos-en-kvm/</link>
      <pubDate>Mon, 11 Feb 2019 19:31:08 +0100</pubDate>
      
      <guid>https://onthedock.github.io/post/190211-como-gestionar-discos-en-kvm/</guid>
      <description>&lt;p&gt;Una vez creados los &lt;em&gt;storage pools&lt;/em&gt; llega el momento de empezar a llenarlos con discos.&lt;/p&gt;
&lt;p&gt;En la &lt;a href=&#34;https://onthedock.github.io/post/190209-como-crear-un-storage-pool-en-kvm/&#34;&gt;entrada anterior&lt;/a&gt; hemos visto cómo añadir una imagen ISO al &lt;em&gt;pool&lt;/em&gt; que hemos creado para los medios de instalación.&lt;/p&gt;
&lt;p&gt;Ahora vamos a crear discos para las máquinas virtuales.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Cómo crear un storage pool en KVM</title>
      <link>https://onthedock.github.io/post/190209-como-crear-un-storage-pool-en-kvm/</link>
      <pubDate>Sat, 09 Feb 2019 19:07:08 +0100</pubDate>
      
      <guid>https://onthedock.github.io/post/190209-como-crear-un-storage-pool-en-kvm/</guid>
      <description>&lt;p&gt;En KVM existe el concepto de &lt;em&gt;storage pool&lt;/em&gt;, que como indica su nombre, es un recurso de almacenamiento.&lt;/p&gt;
&lt;p&gt;En mi caso, todo el almacenamiento es local, por lo que voy a examinar el &lt;em&gt;pool&lt;/em&gt; existente y a continuación crearé un nuevo &lt;em&gt;storage pool&lt;/em&gt; para guardar las ISOs de instalación de los diversos sistemas operativos que utilice.&lt;/p&gt;
&lt;p&gt;Al disponer únicamente del disco local como espacio de almacenamiento la creación de &lt;em&gt;storage pools&lt;/em&gt; adicionales sirve para separar los discos de las VMs (que dejaré en el &lt;em&gt;pool&lt;/em&gt; &lt;strong&gt;default&lt;/strong&gt;) de las ISOs y de paso, aprender cómo funcionan los &lt;em&gt;storage pool&lt;/em&gt; en KVM ;)&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Cómo habilitar virtualización anidada en KVM</title>
      <link>https://onthedock.github.io/post/190205-como-habilitar-virtualizacion-anidada-en-kvm/</link>
      <pubDate>Tue, 05 Feb 2019 22:14:15 +0100</pubDate>
      
      <guid>https://onthedock.github.io/post/190205-como-habilitar-virtualizacion-anidada-en-kvm/</guid>
      <description>&lt;p&gt;La virtualización anidada permite ejecutar una máquina virtual &lt;em&gt;dentro&lt;/em&gt; de otra máquina virtual aprovechando las posibilidades de aceleración por hardware que proporciona el sistema anfitrión.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>KVM en Ubuntu Server</title>
      <link>https://onthedock.github.io/post/190124-kvm-en-ubuntu-server/</link>
      <pubDate>Thu, 24 Jan 2019 20:11:23 +0100</pubDate>
      
      <guid>https://onthedock.github.io/post/190124-kvm-en-ubuntu-server/</guid>
      <description>&lt;p&gt;KVM es un módulo de virtualización que permite al kernel de Linux funcionar como hipervisor. Al formar parte del kernel de Linux, no requiere un entorno de escritorio. Esto permite reducir el &lt;em&gt;peso extra&lt;/em&gt; del sistema, pero también supone un reto a la hora de gestionar las máquinas virtuales.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Probando Amazon Linux 2</title>
      <link>https://onthedock.github.io/post/190101-amazon-linux/</link>
      <pubDate>Tue, 01 Jan 2019 16:43:58 +0100</pubDate>
      
      <guid>https://onthedock.github.io/post/190101-amazon-linux/</guid>
      <description>&lt;figure&gt;&lt;img src=&#34;https://onthedock.github.io/images/190101/what-are-clouds-made-of.jpg&#34;/&gt;
&lt;/figure&gt;

&lt;p&gt;Como dice el chiste, las nubes están compuestas básicamente de servidores Linux. Una de estas nubes, Amazon Web Services (AWS), ofrece su propia distribución de Linux: &lt;a href=&#34;http://amazonlinux.com&#34;&gt;Amazon Linux 2&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Automatizando la configuracion de una VM para Ansible</title>
      <link>https://onthedock.github.io/post/181216-automatizando-la-configuracion-previa-de-una-vm-para-ansible/</link>
      <pubDate>Sun, 16 Dec 2018 13:55:30 +0100</pubDate>
      
      <guid>https://onthedock.github.io/post/181216-automatizando-la-configuracion-previa-de-una-vm-para-ansible/</guid>
      <description>&lt;p&gt;Con Ansible podemos automatizar la gestión de la configuración de las máquinas virtuales (o no) que creamos. Pero para poder explotar la potencia de Ansible necesitamos que la máquina gestionada cumpla unos requisitos previos: disponer de Python 2.6 o superior y que Ansible pueda conectar con la máquina.&lt;/p&gt;
&lt;p&gt;Todas estas tareas se pueden automatizar, así que vamos a ver cómo conseguirlo.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Automatizando la personalización de máquinas virtuales con cloud-init</title>
      <link>https://onthedock.github.io/post/181009-cloud-init/</link>
      <pubDate>Wed, 10 Oct 2018 20:11:56 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/181009-cloud-init/</guid>
      <description>&lt;p&gt;&lt;em&gt;cloud-init&lt;/em&gt; se define como &lt;strong&gt;el estándar para personalizar instancias &lt;em&gt;cloud&lt;/em&gt;&lt;/strong&gt;. Las imágenes para las instancias &lt;em&gt;cloud&lt;/em&gt; empiezan siendo idénticas entre sí, al ser clones. Es la información proporcionada por el usuario lo que le da a la instancia su &lt;em&gt;personalidad&lt;/em&gt; y &lt;em&gt;cloud-init&lt;/em&gt; es la herramienta que aplica esta configuración a las instancias de forma automática.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;cloud-init&lt;/em&gt; fue desarrollado inicialmente por Canonical para las imágenes &lt;em&gt;cloud&lt;/em&gt; de Ubuntu usadas por AWS. Desde entonces, la aplicación ha evolucionado y puede ser usada en otras muchas distribuciones y en otros entornos &lt;em&gt;cloud&lt;/em&gt; (y no &lt;em&gt;cloud&lt;/em&gt;).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Generando un machine-id único</title>
      <link>https://onthedock.github.io/post/180810-generando-un-machine-id-unico/</link>
      <pubDate>Fri, 10 Aug 2018 18:10:27 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/180810-generando-un-machine-id-unico/</guid>
      <description>&lt;p&gt;En la entrada &lt;a href=&#34;https://onthedock.github.io/post/180610-pods-en-estado-creatingcontainer-en-k8s/&#34;&gt;Pods en estado creatingContainer en K8s&lt;/a&gt; describía el problema surgido al crear un clúster de Kubernetes usando Vagrant. Al partir de la misma imagen, todas las máquinas del clúster tienen el mismo &lt;code&gt;machine-id&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;El &lt;code&gt;machine-id&lt;/code&gt; debe ser único, como se describe en los &lt;a href=&#34;https://kubernetes.io/docs/setup/independent/install-kubeadm/#verify-the-mac-address-and-product-uuid-are-unique-for-every-node&#34;&gt;requerimientos de Kubernetes&lt;/a&gt;; si no lo es, se producen problemas como el descrito.&lt;/p&gt;
&lt;p&gt;En esta entrada analizo con más detalle cómo se crea el &lt;em&gt;machine-id&lt;/em&gt; y cómo generar uno nuevo.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Pods encallados en estado CreatingContainer en Kubernetes con nodos creados usando Vagrant</title>
      <link>https://onthedock.github.io/post/180610-pods-en-estado-creatingcontainer-en-k8s/</link>
      <pubDate>Sun, 10 Jun 2018 20:54:27 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/180610-pods-en-estado-creatingcontainer-en-k8s/</guid>
      <description>&lt;p&gt;Una de las maneras más sencillas de crear un entorno de desarrollo para Kubernetes es usando Vagrant y Ansible.&lt;/p&gt;
&lt;p&gt;En el &lt;code&gt;Vagrantfile&lt;/code&gt; definimos un conjunto de tres máquinas, llamadas &lt;code&gt;node1&lt;/code&gt;, &lt;code&gt;node2&lt;/code&gt; y &lt;code&gt;node3&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Una vez las máquinas están levantadas, desde el servidor de Ansible uso &lt;code&gt;ssh-copy-id&lt;/code&gt; para habilitar el &lt;em&gt;login&lt;/em&gt; sin password de Ansible en los nodos del clúster.&lt;/p&gt;
&lt;p&gt;A partir de aquí, tanto la instalación de los prerequisitos como la inicialización del clúster funcionan sin problemas; sin embargo, al intentar desplegar una aplicación, los &lt;em&gt;pods&lt;/em&gt; se quedan en el estado &lt;em&gt;CreatingContainer&lt;/em&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Pipeline - Análisis de código con Sonarqube</title>
      <link>https://onthedock.github.io/post/180522-pipeline-analisis-de-codigo-con-sonarqube/</link>
      <pubDate>Wed, 23 May 2018 12:12:06 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/180522-pipeline-analisis-de-codigo-con-sonarqube/</guid>
      <description>&lt;p&gt;En entradas anteriores hemos &lt;a href=&#34;https://onthedock.github.io/post/180521-subiendo-el-codigo-a-gogs/&#34;&gt;subido el código de la aplicación al repositorio en Gogs&lt;/a&gt; y hemos &lt;a href=&#34;https://onthedock.github.io/post/180521-pipeline-instalacion-de-sonarqube/&#34;&gt;instalado SonarQube&lt;/a&gt; y &lt;a href=&#34;https://onthedock.github.io/post/180520-pipeline-instalacion-y-actualizacion-de-jenkins/&#34;&gt;Jenkins&lt;/a&gt;. Ahora, vamos a configurar Jenkins para que analice el código de la aplicación y detectar fallos incluso antes de compilar la aplicación.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Update 2022-01-06&lt;/strong&gt; He actualizado los enlaces externos hacia la documentación de SonarQube. Por favor, revisa la documentación oficial actualizada ya que este artículo se escribió para una versión anterior de SonarQube.&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>De Docker Stats a un fichero CSV</title>
      <link>https://onthedock.github.io/post/180522-docker-stats/</link>
      <pubDate>Tue, 22 May 2018 23:02:24 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/180522-docker-stats/</guid>
      <description>&lt;p&gt;Docker proporciona el comando &lt;code&gt;docker stats&lt;/code&gt; para monitorizar el uso de CPU, memoria, etc de los contenedores en ejecución:&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Pipeline - Troubleshooting del arranque del contenedor con Sonarqube</title>
      <link>https://onthedock.github.io/post/180521-pipeline-troubleshooting-del-arranque-del-contenedor-con-sonarqube/</link>
      <pubDate>Mon, 21 May 2018 12:37:10 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/180521-pipeline-troubleshooting-del-arranque-del-contenedor-con-sonarqube/</guid>
      <description>&lt;p&gt;En las guías y tutoriales en internet siempre funciona todo sin ningún fallo. Sin embargo, lo más habitual es que encontremos problemas en los primeros intentos de poner en marcha una aplicación.&lt;/p&gt;
&lt;p&gt;Personalmente, creo que el aprendizaje es un proceso de ensayo y error, por lo que se aprende solucionando los errores que nos encontramos.&lt;/p&gt;
&lt;p&gt;Con esa idea en mente, también intento documentar los fallos que cometo. A continuación tienes el registro de las acciones que realicé para solucionar los problemas encontrados en el arranque de SonarQube.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Pipeline - Instalación de Sonarqube</title>
      <link>https://onthedock.github.io/post/180521-pipeline-instalacion-de-sonarqube/</link>
      <pubDate>Mon, 21 May 2018 12:19:43 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/180521-pipeline-instalacion-de-sonarqube/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.sonarqube.org/&#34;&gt;SonarQube&lt;/a&gt; es una herramienta de análisis continuo de código.&lt;/p&gt;
&lt;p&gt;La versión &lt;em&gt;open source&lt;/em&gt; ofrece soporte para 20 lenguajes de programación, mientras que la versión comercial amplía el número de &lt;em&gt;analizadores&lt;/em&gt;. También hay &lt;em&gt;analizadores&lt;/em&gt; creados por la comunidad.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Pipeline - Creacion del job en Jenkins</title>
      <link>https://onthedock.github.io/post/180521-pipeline-creacion-del-job-en-jenkins/</link>
      <pubDate>Mon, 21 May 2018 12:03:50 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/180521-pipeline-creacion-del-job-en-jenkins/</guid>
      <description>&lt;p&gt;Una vez tenemos código en el repositorio de &lt;a href=&#34;https://onthedock.github.io/post/180521-subiendo-el-codigo-a-gogs/&#34;&gt;Gogs&lt;/a&gt;, para poder avanzar tenemos que definir y configurar el &lt;em&gt;pipeline&lt;/em&gt; en Jenkins.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Pipeline - Subiendo el código a Gogs</title>
      <link>https://onthedock.github.io/post/180521-subiendo-el-codigo-a-gogs/</link>
      <pubDate>Mon, 21 May 2018 09:03:13 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/180521-subiendo-el-codigo-a-gogs/</guid>
      <description>&lt;p&gt;Ya hemos instalado &lt;a href=&#34;https://onthedock.github.io/post/180520-pipeline-gogs-el-repositorio-de-codigo/&#34;&gt;Gogs&lt;/a&gt; y &lt;a href=&#34;https://onthedock.github.io/post/180520-pipeline-instalacion-y-actualizacion-de-jenkins/&#34;&gt;Jenkins&lt;/a&gt; en nuestro sistema; ahora es el momento de empezar a subir código y ver qué podemos hacer con él.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Pipeline - Instalacion y actualizacion de Jenkins</title>
      <link>https://onthedock.github.io/post/180520-pipeline-instalacion-y-actualizacion-de-jenkins/</link>
      <pubDate>Sun, 20 May 2018 07:43:06 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/180520-pipeline-instalacion-y-actualizacion-de-jenkins/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://jenkins.io/&#34;&gt;Jenkins&lt;/a&gt; es un servidor de &lt;em&gt;automatización&lt;/em&gt; de código abierto escrito en Java. Es una herramienta clave en el proceso de integración continua y un facilitador de cara a realizar despliegues continuos.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Pipeline: Gogs - El repositorio de código</title>
      <link>https://onthedock.github.io/post/180520-pipeline-gogs-el-repositorio-de-codigo/</link>
      <pubDate>Sun, 20 May 2018 07:30:49 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/180520-pipeline-gogs-el-repositorio-de-codigo/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://gogs.io&#34;&gt;Gogs&lt;/a&gt; es un servidor de Git escrito en Go. Proporciona un interfaz web similar a GitHub.&lt;/p&gt;
&lt;p&gt;En esta entrada se describe cómo lanzar los contenedores necesarios para tener una instalación funcional de Gogs.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Pipeline: Aplicaciones auxiliares</title>
      <link>https://onthedock.github.io/post/180520-pipeline-aplicaciones-auxiliares/</link>
      <pubDate>Sun, 20 May 2018 07:08:04 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/180520-pipeline-aplicaciones-auxiliares/</guid>
      <description>&lt;p&gt;Como indicaba en el entrada &lt;a href=&#34;https://onthedock.github.io/post/180518-integracion-continua-con-jenkins-y-docker/&#34;&gt;que abría esta serie&lt;/a&gt;, además de las aplicaciones que forman parte del &lt;em&gt;pipeline&lt;/em&gt;, uso algunas aplicaciones auxiliares.&lt;/p&gt;
&lt;p&gt;Estas aplicaciones son &lt;em&gt;MailDev&lt;/em&gt; y &lt;em&gt;Portainer&lt;/em&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Pipeline: Consideraciones Generales</title>
      <link>https://onthedock.github.io/post/180519-pipeline-consideraciones-generales/</link>
      <pubDate>Sat, 19 May 2018 20:12:47 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/180519-pipeline-consideraciones-generales/</guid>
      <description>&lt;p&gt;El principal objetivo de esta serie de artículos es aprender a construir un &lt;em&gt;pipeline&lt;/em&gt; siguiendo, en la medida de lo posible, las mejores prácticas de cada producto.&lt;/p&gt;
&lt;p&gt;En esta guía, se muestran los pasos a seguir de principio a fin sin que falle nada; sin embargo, el proceso real es &lt;strong&gt;muy diferente&lt;/strong&gt;, con multitud de errores a lo largo del camino.&lt;/p&gt;
&lt;p&gt;En esta entrada quiero exponer algunos de los cambios que he realizado, a nivel de diseño de la arquitectura durante la creación del &lt;em&gt;pipeline&lt;/em&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Integración continua con Jenkins y Docker</title>
      <link>https://onthedock.github.io/post/180518-integracion-continua-con-jenkins-y-docker/</link>
      <pubDate>Fri, 18 May 2018 06:42:34 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/180518-integracion-continua-con-jenkins-y-docker/</guid>
      <description>&lt;p&gt;En esta serie de artículos quiero construir una &lt;em&gt;pipeline&lt;/em&gt; de integración continua basada en Jenkins sobre Docker.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Ejecutar script al hacer login en el sistema</title>
      <link>https://onthedock.github.io/post/180517-ejecutar-script-al-hacer-login/</link>
      <pubDate>Thu, 17 May 2018 08:00:35 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/180517-ejecutar-script-al-hacer-login/</guid>
      <description>&lt;p&gt;Al hacer login en un sistema Ubuntu, se suele presentar información acerca de los paquetes disponibles para actualización y otra información relevante.&lt;/p&gt;
&lt;p&gt;En esta entrada indico cómo conseguir el mismo resultado mostrando la información que te interesa sobre el sistema.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Transmission y Samba</title>
      <link>https://onthedock.github.io/post/180517-transmission-y-samba/</link>
      <pubDate>Wed, 16 May 2018 23:09:43 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/180517-transmission-y-samba/</guid>
      <description>&lt;p&gt;En esta entrada algo &lt;em&gt;offtopic&lt;/em&gt; indico cómo instalar y configurar un equipo para descargar ficheros en formato &lt;code&gt;torrent&lt;/code&gt; usando &lt;a href=&#34;http://transmissionbt.com/&#34;&gt;Transmission&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Los ficheros descargados se comparten vía &lt;a href=&#34;https://www.samba.org&#34;&gt;Samba&lt;/a&gt; para el resto de equipos de casa (linux, Mac y Windows).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Cómo proteger el acceso remoto a Docker</title>
      <link>https://onthedock.github.io/post/180318-como-proteger-el-acceso-remoto-a-docker/</link>
      <pubDate>Sun, 18 Mar 2018 11:33:24 +0100</pubDate>
      
      <guid>https://onthedock.github.io/post/180318-como-proteger-el-acceso-remoto-a-docker/</guid>
      <description>&lt;p&gt;En la entrada  &lt;a href=&#34;https://onthedock.github.io/post/180317-portainer/&#34;&gt;Portainer: gestión de servidores Docker&lt;/a&gt; comentaba la necesidad de habilitar el acceso remoto al API de Docker &lt;strong&gt;de manera segura&lt;/strong&gt;, apuntando a la documentación oficial de Docker sobre cómo realizar esta configuración.&lt;/p&gt;
&lt;p&gt;En esta entrada indico cómo proteger el acceso remoto a un servidor de Docker a través de la API, siguiendo las indicaciones de la documentación oficial en &lt;a href=&#34;https://docs.docker.com/engine/security/https/&#34;&gt;Protect the Docker daemon socket&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Portainer: gestión de servidores Docker</title>
      <link>https://onthedock.github.io/post/180317-portainer/</link>
      <pubDate>Sat, 17 Mar 2018 21:44:47 +0100</pubDate>
      
      <guid>https://onthedock.github.io/post/180317-portainer/</guid>
      <description>&lt;p&gt;En una entrada anterior expliqué mi primera toma de contacto con Portainer y cómo usar &lt;a href=&#34;https://onthedock.github.io/post/170429-portainer-para-gestionar-tus-contenedores-en-docker/&#34;&gt;Portainer para gestionar tus contenedores en Docker&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;La herramienta -y la &lt;a href=&#34;https://portainer.readthedocs.io/en/stable/&#34;&gt;documentación&lt;/a&gt;- ha mejorado durante este tiempo, por lo que ahora el proceso es todavía más sencillo y Portainer más potente.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Instalación de Powershell en Debian 9</title>
      <link>https://onthedock.github.io/post/180207-instalacion-de-powershell-en-debian-9/</link>
      <pubDate>Wed, 07 Feb 2018 19:58:18 +0100</pubDate>
      
      <guid>https://onthedock.github.io/post/180207-instalacion-de-powershell-en-debian-9/</guid>
      <description>&lt;p&gt;Las instrucciones para instalar Powershell en Linux &lt;a href=&#34;https://github.com/PowerShell/PowerShell/blob/master/docs/installation/linux.md&#34;&gt;Package Installation Instructions&lt;/a&gt; hacen referencia a Ubuntu. Cuando se intenta instalar Powershell en Debian 9, se obtiene un error relativo a paquetes que no se encuentran.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Ignorar el DNS asignado por el servidor DHCP</title>
      <link>https://onthedock.github.io/post/171208-ignorar-el-dns-asignado-por-el-servidor-dhcp/</link>
      <pubDate>Fri, 08 Dec 2017 08:39:09 +0100</pubDate>
      
      <guid>https://onthedock.github.io/post/171208-ignorar-el-dns-asignado-por-el-servidor-dhcp/</guid>
      <description>&lt;p&gt;Después de instalar y configurar &lt;code&gt;dnsmasq&lt;/code&gt;, quiero hacer que éste sea el DNS usado por defecto. Como el servidor DHCP proporciona, además de la IP los servidores DNS, las máquinas virtuales en el equipo de laboratorio no son capaces de resolver los nombres del resto de máquinas del definidos en &lt;code&gt;dnsmasq&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Single node cluster en la RPi3</title>
      <link>https://onthedock.github.io/post/171111-snc-en-rpi3/</link>
      <pubDate>Sat, 11 Nov 2017 12:08:36 +0100</pubDate>
      
      <guid>https://onthedock.github.io/post/171111-snc-en-rpi3/</guid>
      <description>&lt;p&gt;En la entrada anterior &lt;a href=&#34;https://onthedock.github.io/post/171104-apiserver-detenido/&#34;&gt;API server detenido: The connection to the server was refused&lt;/a&gt; encontré problemas con la tarjeta microSD que sirve de almacenamiento para el nodo master del clúster de Kubernetes.&lt;/p&gt;
&lt;p&gt;La solución al problema pasaba por realizar un análisis de la tarjeta para repararla. Sin embargo, al intentarlo, no ha habido manera de formatear y reinstalar HypriotOS sobre la tarjeta.&lt;/p&gt;
&lt;p&gt;El fallo de la tarjeta de memoria ha sido la gota final que me ha hecho abandonar el clúster multinodo en las Raspberry Pi (de momento). Así que he decidido instalar un clúster de un solo nodo en una de las Raspberri Pi 3.&lt;/p&gt;
&lt;p&gt;En este artículo sigo las instrucciones oficiales para construir un clúster de Kubernetes usando &lt;em&gt;kubeadm&lt;/em&gt;: &lt;a href=&#34;https://kubernetes.io/docs/setup/independent/create-cluster-kubeadm/&#34;&gt;Using kubeadm to Create a Cluster&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Gogs - Cómo crear tu propio servicio de hospedaje de repositorios Git</title>
      <link>https://onthedock.github.io/post/171106-gogs-como-crear-tu-propio-servicio-de-hospedaje-de-repos-git/</link>
      <pubDate>Mon, 06 Nov 2017 22:11:26 +0100</pubDate>
      
      <guid>https://onthedock.github.io/post/171106-gogs-como-crear-tu-propio-servicio-de-hospedaje-de-repos-git/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://gogs.io/&#34;&gt;Gogs&lt;/a&gt; es la manera más sencilla, rápida y menos dolorosa de poner en marcha tu propio servicio de Git en tu infraestructura, tu propio &lt;em&gt;Github&lt;/em&gt;, para entendernos. Gogs proporciona un entorno web que permite gestionar los respositorios Git desde el navegador, el acceso que tienen los usuarios, gestionar &lt;em&gt;issues&lt;/em&gt; y &lt;em&gt;pull requests&lt;/em&gt; e incluso crear un wiki para documentar el proyecto.&lt;/p&gt;
&lt;p&gt;Es 100% código abierto, está escrito en Go y es &lt;em&gt;muy ligero&lt;/em&gt; (incluso puede correr en una Raspberry Pi).&lt;/p&gt;
&lt;p&gt;En este artículo te indico cómo confirgurarlo lanzándolo desde un contenedor sobre Docker.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Trucos para para línea de comandos</title>
      <link>https://onthedock.github.io/post/171002-trucos-para-la-linea-de-comandos/</link>
      <pubDate>Mon, 02 Oct 2017 20:44:00 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/171002-trucos-para-la-linea-de-comandos/</guid>
      <description>&lt;p&gt;Últimamente paso mucho tiempo en la línea de comando, por lo que aprender algunos &lt;em&gt;trucos&lt;/em&gt; en forma de combinaciones de teclas, etc, que me ayuden a ser mucho más ágil.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Cómo crear una imagen con Caddy y PHP</title>
      <link>https://onthedock.github.io/post/170930-como-crear-una-imagen-con-caddy-y-php/</link>
      <pubDate>Sat, 30 Sep 2017 21:36:58 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/170930-como-crear-una-imagen-con-caddy-y-php/</guid>
      <description>&lt;p&gt;En las entradas anteriores he descrito los problemas -tanto conceptuales como técnicos- que he encontrado al intentar llevar Dokuwiki a un contenedor.&lt;/p&gt;
&lt;p&gt;En este artículo explico los pasos a seguir para construir una imagen con &lt;a href=&#34;https://caddyserver.com/&#34;&gt;Caddy server&lt;/a&gt; y PHP, de manera que puedas servir tus aplicaciones PHP usando contenedores.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Nuevos problemas al construir la imagen con Caddy y PHP, ahora para Raspberry Pi</title>
      <link>https://onthedock.github.io/post/170930-nuevos-problemas-para-construir-la-imagen-para-rpi/</link>
      <pubDate>Sat, 30 Sep 2017 17:30:45 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/170930-nuevos-problemas-para-construir-la-imagen-para-rpi/</guid>
      <description>&lt;p&gt;En la entrada anterior &lt;a href=&#34;https://onthedock.github.io/post/170924-dokuwiki_en_un_contenedor_notas/&#34;&gt;Dokuwiki en un contendor&lt;/a&gt; dejaba constancia de los problemas que encontré creando una imagen para ejecutar Dokuwiki en un contenedor.&lt;/p&gt;
&lt;p&gt;Al final de la entrada indicaba que la creación de la misma imagen, pero para ARM sería tan sencillo como cambiar la imagen base. &lt;strong&gt;Pues no.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Como he tenido que revisar a fondo los pasos que seguí -en particular para configurar la carpeta desde donde Caddy publica los ficheros-, he introducido algunos cambios que simplifiquen y mejoren el uso de la imagen.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Dokuwiki en un contenedor: notas sobre el proceso</title>
      <link>https://onthedock.github.io/post/170924-dokuwiki_en_un_contenedor_notas/</link>
      <pubDate>Sun, 24 Sep 2017 22:43:01 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/170924-dokuwiki_en_un_contenedor_notas/</guid>
      <description>&lt;p&gt;Antes de convertir todas las Raspberry Pi de casa en &lt;em&gt;hosts&lt;/em&gt; de Docker, usaba la Raspberry Pi B+ como wiki casero. En él documentaba todo lo que iba aprendiendo sobre las diferentes tecnologías de mi día a día.&lt;/p&gt;
&lt;p&gt;Hoy he vuelto a instalar Dokuwiki, aunque esta vez usando un contenedor. En este artículo comento algunos de los puntos relevantes que han surgido durante el proceso.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Probando Minio</title>
      <link>https://onthedock.github.io/post/170820-probando-minio/</link>
      <pubDate>Sun, 20 Aug 2017 21:28:20 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/170820-probando-minio/</guid>
      <description>&lt;p&gt;Minio proporciona un servidor de almacenamiento distribuido compatible con el API de Amazon AWS S3.&lt;/p&gt;
&lt;p&gt;En esta entrada comento las pruebas que he estado realizando usando Minio tanto el cliente como el servidor en contenedores Docker.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Usando un contenedor sidecar para el almacenamiento</title>
      <link>https://onthedock.github.io/post/170819-usando-un-contenedor-sidecar/</link>
      <pubDate>Sat, 19 Aug 2017 09:51:23 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/170819-usando-un-contenedor-sidecar/</guid>
      <description>&lt;p&gt;Como indicaba en la entrada la anterior entrada &lt;a href=&#34;https://onthedock.github.io/post/170817-almacenamiento-en-k8s-problema-abierto/&#34;&gt;Almacenamiento en Kubernetes: problema abierto&lt;/a&gt;, el problema de proporcionar almacenamiento persistente para las aplicaciones desplegadas en Kubernetes sigue sin tener una solución general.&lt;/p&gt;
&lt;p&gt;En este artículo comento una solución particular al problema del almacenamiento basada en el uso de un contenedor &lt;em&gt;sidecar&lt;/em&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Play With Kubernetes</title>
      <link>https://onthedock.github.io/post/170818-play-with-k8s/</link>
      <pubDate>Fri, 18 Aug 2017 20:25:31 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/170818-play-with-k8s/</guid>
      <description>&lt;p&gt;Hace unas semanas descubrí el sitio &lt;a href=&#34;http://play-with-k8s.com&#34;&gt;PWK&lt;/a&gt;, &lt;strong&gt;Play with Kubernetes&lt;/strong&gt;. Su creador, &lt;a href=&#34;https://medium.com/@marcosnils&#34;&gt;Marcos Nils&lt;/a&gt; explica en &lt;a href=&#34;https://medium.com/@marcosnils/introducing-pwk-play-with-k8s-159fcfeb787b&#34;&gt;Introducing PWK (Play with K8s)&lt;/a&gt; que tenía ganas de extender la plataforma PWD (Play with Docker) a Kubernetes.&lt;/p&gt;
&lt;p&gt;El sitio PWK permite montar clústers de Kubernetes y lanzar servicios replicados de manera rápida y sencilla. Se trata de un entorno donde realizar pruebas y &lt;em&gt;jugar&lt;/em&gt; durante cuatro horas con varias instancias de Docker sobre las que podemos usar &lt;code&gt;kubeadm&lt;/code&gt; para instalar y configurar Kubernetes, creando un clúster en menos de un minuto.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Troubleshooting: Creación de pods del tutorial &#39;StatefulSet Basics&#39;</title>
      <link>https://onthedock.github.io/post/170818-troubleshooting-creacion-de-pods-del-tutorial-statefulset-basics/</link>
      <pubDate>Fri, 18 Aug 2017 17:45:03 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/170818-troubleshooting-creacion-de-pods-del-tutorial-statefulset-basics/</guid>
      <description>&lt;p&gt;Esta entrada es un registro de las diferentes acciones que realicé para conseguir que los &lt;em&gt;pods&lt;/em&gt; asociados al &lt;em&gt;StatefulSet&lt;/em&gt; del tutorial &lt;a href=&#34;https://kubernetes.io/docs/tutorials/stateful-application/basic-stateful-set/&#34;&gt;StatefulSet Basics&lt;/a&gt; se crearan correctamente.&lt;/p&gt;
&lt;p&gt;Lo publico como lo que es, un &lt;em&gt;log&lt;/em&gt; de todos los pasos que fui dando, en modo &lt;em&gt;ensayo y error&lt;/em&gt;, hasta que conseguí que los &lt;em&gt;pods&lt;/em&gt; se crearan con éxito. Mi intención al publicarlo no es tanto que sirva como referencia sino como archivo. Y si alguien se encuentra con un problema similar, que pueda consultar los pasos que he dado durante el &lt;em&gt;troubleshooting&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Como indicaba en el artículo anterior, quiero publicar un tutorial paso a paso con el proceso correcto para provisionar los &lt;em&gt;PersistentVolumes&lt;/em&gt; necesarios para el tutorial &lt;a href=&#34;https://kubernetes.io/docs/tutorials/stateful-application/basic-stateful-set/&#34;&gt;StatefulSet Basics&lt;/a&gt; del sitio de Kubernetes.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Almacenamiento en Kubernetes: problema abierto</title>
      <link>https://onthedock.github.io/post/170817-almacenamiento-en-k8s-problema-abierto/</link>
      <pubDate>Thu, 17 Aug 2017 17:11:05 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/170817-almacenamiento-en-k8s-problema-abierto/</guid>
      <description>&lt;p&gt;Leía el otro día que desde el principio la tendencia hacia los microservicios estaba pensada para las aplicaciones &lt;em&gt;stateless&lt;/em&gt;, es decir, sin &amp;ldquo;memoria&amp;rdquo; del estado, donde cada interacción con la aplicación se considera independiente del resto. El ejemplo clásico de aplicación &lt;em&gt;stateless&lt;/em&gt; es un servidor web. Así que no es de extrañar que la aplicación que siempre aparece en todo tutorial que se precie de Docker/Kubernetes  es Nginx.&lt;/p&gt;
&lt;p&gt;En el mundo real, sin embargo, la mayoría de aplicaciones requieren algún tipo de persistencia, incluso las webs más sencillas (así surgieron las &lt;em&gt;cookies&lt;/em&gt;). Pero por el momento, Kubernetes y el almacenamiento son dos conceptos que no combinan demasiado bien, aunque funcionan perfectamente por separado.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Asignar recursos de CPU y RAM a un contenedor</title>
      <link>https://onthedock.github.io/post/170729-asignar-recursos-de-cpu-y-ram-a-un-contenedor/</link>
      <pubDate>Sat, 29 Jul 2017 21:12:35 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/170729-asignar-recursos-de-cpu-y-ram-a-un-contenedor/</guid>
      <description>&lt;p&gt;Cuando se crea un &lt;em&gt;pod&lt;/em&gt; se pueden reservar recursos de CPU y RAM para los contenedores que corren en el &lt;em&gt;pod&lt;/em&gt;. Para reservar recursos, usa el campo &lt;code&gt;resources: requests&lt;/code&gt; en el fichero de configuración. Para establecer límites, usa el campo &lt;code&gt;resources: limits&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Espacios de nombres en Kubernetes</title>
      <link>https://onthedock.github.io/post/170723-espacios-de-nombres-en-k8s/</link>
      <pubDate>Sun, 23 Jul 2017 20:04:45 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/170723-espacios-de-nombres-en-k8s/</guid>
      <description>&lt;p&gt;Los &lt;a href=&#34;https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/&#34;&gt;&lt;em&gt;namespaces&lt;/em&gt; (espacios de nombres)&lt;/a&gt; en Kubernetes permiten establecer un nivel adicional de separación entre los contenedores que comparten los recursos de un clúster.&lt;/p&gt;
&lt;p&gt;Esto es especialmente útil cuando diferentes grupos de DevOps usan el mismo clúster y existe el riesgo potencial de colisión de nombres de los &lt;em&gt;pods&lt;/em&gt;, etc usados por los diferentes equipos.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Mi primera aplicación en Kubernetes</title>
      <link>https://onthedock.github.io/post/170716-mi-primera-app-en-kubernetes/</link>
      <pubDate>Sun, 16 Jul 2017 19:38:17 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/170716-mi-primera-app-en-kubernetes/</guid>
      <description>&lt;p&gt;Después de &lt;a href=&#34;https://onthedock.github.io/post/170702-crear-un-cluster-de-un-solo-nodo/&#34;&gt;crear un cluster de un solo nodo&lt;/a&gt;, en esta entrada explico los pasos para publicar una aplicación en el clúster.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Crear un cluster de un solo nodo</title>
      <link>https://onthedock.github.io/post/170702-crear-un-cluster-de-un-solo-nodo/</link>
      <pubDate>Sun, 02 Jul 2017 23:14:22 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/170702-crear-un-cluster-de-un-solo-nodo/</guid>
      <description>&lt;p&gt;Para tener un clúster de desarrollo con la versatilidad de poder hacer y deshacer cambios (usando los &lt;em&gt;snapshots&lt;/em&gt; de una máquina virtual), lo más sencillo es disponer de un clúster de Kubernetes de un solo nodo.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>IP en mensaje prelogin</title>
      <link>https://onthedock.github.io/post/170702-ip-en-mensaje-prelogin/</link>
      <pubDate>Sun, 02 Jul 2017 22:07:18 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/170702-ip-en-mensaje-prelogin/</guid>
      <description>&lt;p&gt;En la pantalla de &lt;em&gt;login&lt;/em&gt; en modo consola de los sistemas Linux se muestra un mensaje de bienvenida.&lt;/p&gt;
&lt;p&gt;En este artículo se muestra cómo hacer que se muestre la IP del equipo.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Instalación de Alpine linux</title>
      <link>https://onthedock.github.io/post/170604-instalacion-de-alpine-linux/</link>
      <pubDate>Sun, 04 Jun 2017 18:26:48 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/170604-instalacion-de-alpine-linux/</guid>
      <description>&lt;p&gt;Alpine Linux se ha convertido en la distribución por defecto con la que construir contenedores.&lt;/p&gt;
&lt;p&gt;Alpine tiene sus propias particularidades, ya que no deriva de otra distribución, de manera que he pensado que sería una buena idea tener una máquina virtual con la que entrenarme.&lt;/p&gt;
&lt;p&gt;En este artículo explico qué diferencias he encontrado en Alpine.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Protege el acceso remoto via API a Docker</title>
      <link>https://onthedock.github.io/post/170507-protege-el-acceso-remoto-via-api-a-docker/</link>
      <pubDate>Sun, 07 May 2017 18:33:16 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/170507-protege-el-acceso-remoto-via-api-a-docker/</guid>
      <description>&lt;p&gt;En el artículo &lt;a href=&#34;https://onthedock.github.io/post/170506-habilita-el-acceso-remoto-via-api-a-docker/&#34;&gt;Habilita el API remoto de Docker&lt;/a&gt; explicaba cómo configurar el acceso remoto al API de Docker. El problema es que de esta forma no hay manera de restringir el acceso.&lt;/p&gt;
&lt;p&gt;En este artículo protegemos el acceso usando TLS de manera que sólo se permitan conexiones que presenten un certificado firmado por una CA de confianza.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Configura un endpoint remoto en Portainer</title>
      <link>https://onthedock.github.io/post/170506-configura-un-endpoint-remoto-en-portainer/</link>
      <pubDate>Sat, 06 May 2017 17:38:20 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/170506-configura-un-endpoint-remoto-en-portainer/</guid>
      <description>&lt;p&gt;En el artículo &lt;a href=&#34;https://onthedock.github.io/post/170429-portainer-para-gestionar-tus-contenedores-en-docker/&#34;&gt;Portainer para gestionar tus contenedores en Docker&lt;/a&gt; usamos &lt;strong&gt;Portainer&lt;/strong&gt; para gestionar el Docker Engine local.&lt;/p&gt;
&lt;p&gt;En el artículo &lt;a href=&#34;https://onthedock.github.io/post/170506-habilita-el-acceso-remoto-via-api-a-docker/&#34;&gt;Habilita el API remoto de Docker&lt;/a&gt; habilitamos el acceso remoto al API de Docker Engine.&lt;/p&gt;
&lt;p&gt;En este artículo configuramos &lt;strong&gt;Portainer&lt;/strong&gt; para conectar con un &lt;em&gt;endpoint&lt;/em&gt; remoto (el API expuesta de un Docker Engine).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Habilita el acceso remoto vía API a Docker</title>
      <link>https://onthedock.github.io/post/170506-habilita-el-acceso-remoto-via-api-a-docker/</link>
      <pubDate>Sat, 06 May 2017 15:23:36 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/170506-habilita-el-acceso-remoto-via-api-a-docker/</guid>
      <description>&lt;p&gt;Portainer permite gestionar &lt;em&gt;endpoints&lt;/em&gt; remotos para Docker (y Docker Swarm) mediante el API REST de Docker Engine. El problema es que el API está desactivado por defecto.&lt;/p&gt;
&lt;p&gt;A continuación indico cómo activar y verificar el acceso remoto al API de Docker Engine.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Instala Weave Net en Kubernetes 1.6</title>
      <link>https://onthedock.github.io/post/170505-instala-weave-net-en-kubernetes-1.6/</link>
      <pubDate>Fri, 05 May 2017 22:14:36 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/170505-instala-weave-net-en-kubernetes-1.6/</guid>
      <description>&lt;p&gt;Una de las cosas que más me sorprenden de Kubernetes es que es necesario instalar una &lt;em&gt;capa de red&lt;/em&gt; sobre el clúster.&lt;/p&gt;
&lt;p&gt;En el caso concreto del que he obtenido las &lt;em&gt;capturas de pantalla&lt;/em&gt;, el clúster corre sobre máquinas virtuales con Debian Jessie.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Solución al error de instalación de Kubernetes en Debian Jessie (Missing cgroups: memory)</title>
      <link>https://onthedock.github.io/post/170422-solucion-al-error-missing-cgroups-memory-en-debian-jessie/</link>
      <pubDate>Sat, 22 Apr 2017 07:57:14 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/170422-solucion-al-error-missing-cgroups-memory-en-debian-jessie/</guid>
      <description>&lt;p&gt;Al lanzar la inicialización del clúster con &lt;code&gt;kubeadm init&lt;/code&gt; en Debian Jessie, las comprobaciones inciales indican que no se encuentran los &lt;em&gt;cgroups&lt;/em&gt; para la memoria (échale un vistazo al artículo &lt;a href=&#34;https://onthedock.github.io/post/170417-instalacion-de-kubernetes-falla-missing-cgroups-memory/&#34;&gt;La instalación de Kubernetes falla en Debian Jessie (missing cgroups: memory)&lt;/a&gt;). Los &lt;em&gt;cgroups&lt;/em&gt; son una de las piezas fundamentales en las que se basa Docker para &lt;em&gt;aislar&lt;/em&gt; los procesos de los contenedores, por lo que la inicialización del clúster de Kubernetes se detiene.&lt;/p&gt;
&lt;p&gt;La solución es tan sencilla como habilitar los &lt;em&gt;cgroups&lt;/em&gt; durante el arranque.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>La instalación de Kubernetes falla en Debian Jessie (Missing cgroups: memory)</title>
      <link>https://onthedock.github.io/post/170417-instalacion-de-kubernetes-falla-missing-cgroups-memory/</link>
      <pubDate>Mon, 17 Apr 2017 19:38:11 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/170417-instalacion-de-kubernetes-falla-missing-cgroups-memory/</guid>
      <description>&lt;p&gt;La instalación de Kubernetes se realiza de forma casi automática gracias al &lt;em&gt;script&lt;/em&gt; &lt;code&gt;kubeadm&lt;/code&gt;. Sólo hay que seguir las instrucciones de &lt;a href=&#34;https://kubernetes.io/docs/getting-started-guides/kubeadm/&#34;&gt;Installing Kubernetes on Linux with kubeadm&lt;/a&gt; y la salida por pantalla del propio &lt;em&gt;script&lt;/em&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Docker-engine vs Docker.io</title>
      <link>https://onthedock.github.io/post/170410-docker-engine_vs_docker.io/</link>
      <pubDate>Mon, 10 Apr 2017 21:30:31 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/170410-docker-engine_vs_docker.io/</guid>
      <description>&lt;p&gt;En función de la distribución que uses, verás que el paquete de instalación de Docker es &lt;code&gt;docker-engine&lt;/code&gt; o &lt;code&gt;docker.io&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;¿Cuál es la diferencia entre uno y otro?&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Contenedores y volúmenes de datos en el host</title>
      <link>https://onthedock.github.io/post/170408-contenedores-y-volumenes-en-el-host/</link>
      <pubDate>Sat, 08 Apr 2017 05:53:59 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/170408-contenedores-y-volumenes-en-el-host/</guid>
      <description>&lt;p&gt;Ayer leía el artículo &lt;a href=&#34;https://thenewstack.io/containers-storage-arent-yet/&#34;&gt;Containers and Storage: Why We Aren’t There Yet&lt;/a&gt; y recordaba los &lt;em&gt;quebraderos de cabeza&lt;/em&gt; que tuve intentado crear una serie de contenedores accediendo a un volumen de datos.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Configura curl para usar un proxy</title>
      <link>https://onthedock.github.io/post/170111-configura-curl-para-usar-proxy/</link>
      <pubDate>Wed, 11 Jan 2017 08:22:56 +0100</pubDate>
      
      <guid>https://onthedock.github.io/post/170111-configura-curl-para-usar-proxy/</guid>
      <description>&lt;p&gt;Cómo configurar &lt;code&gt;curl&lt;/code&gt; para salir a internet a través de un &lt;em&gt;proxy&lt;/em&gt; que requiere autenticación.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Instala Docker en Ubuntu Server 16.04</title>
      <link>https://onthedock.github.io/post/170110-instala-docker-en-ubuntu-server-16.04/</link>
      <pubDate>Tue, 10 Jan 2017 15:12:46 +0100</pubDate>
      
      <guid>https://onthedock.github.io/post/170110-instala-docker-en-ubuntu-server-16.04/</guid>
      <description>&lt;p&gt;Cómo instalar Docker en Ubuntu Server 16.04.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Configura el proxy para APT en Ubuntu Server 16.04</title>
      <link>https://onthedock.github.io/post/170110-configura-apt-en-ubuntu-server-16.04/</link>
      <pubDate>Tue, 10 Jan 2017 15:01:55 +0100</pubDate>
      
      <guid>https://onthedock.github.io/post/170110-configura-apt-en-ubuntu-server-16.04/</guid>
      <description>&lt;p&gt;Cómo configurar &lt;code&gt;apt&lt;/code&gt; para salir a internet a través de un &lt;em&gt;proxy&lt;/em&gt; que requiere autenticación.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
