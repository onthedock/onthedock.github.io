<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Google-Cloud on On The Dock</title>
    <link>https://onthedock.github.io/tags/google-cloud/</link>
    <description>Recent content in Google-Cloud on On The Dock</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>Handmade with &amp;#9829; by Xavi Aznar</copyright>
    <lastBuildDate>Sat, 23 Aug 2025 19:37:23 +0200</lastBuildDate>
    <atom:link href="https://onthedock.github.io/tags/google-cloud/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>En Google Cloud no es necesario usar Service Account Keys</title>
      <link>https://onthedock.github.io/post/20250823-no-es-necesario-usar-sa-keys/</link>
      <pubDate>Sat, 23 Aug 2025 19:37:23 +0200</pubDate>
      <guid>https://onthedock.github.io/post/20250823-no-es-necesario-usar-sa-keys/</guid>
      <description>&lt;p&gt;El otro día uno de nuestros clientes nos solicitó crear Service Account Keys para poder automatizar unas tareas en Google Cloud.&#xA;El cliente tenía experiencia anterior en AWS, donde es necesario crear Access Keys para que, durante el desarrollo de la aplicación, pudieran probarla como si se ejecutara en el cloud.&lt;/p&gt;&#xA;&lt;p&gt;Sin embargo, en Google Cloud, las cosas funcionan de otra forma, y usar Service Account Keys es la última opción, por ser la menos segura. Personalmente, soy &lt;em&gt;muy fan&lt;/em&gt; del diagrama de está página &lt;a href=&#34;https://cloud.google.com/docs/authentication#auth-decision-tree&#34;&gt;Choose the right authentication method for your use case&lt;/a&gt;.&#xA;Parte de la &lt;em&gt;magia&lt;/em&gt; que hace innecesario generar Service Account Keys el cómo funcionan las &lt;em&gt;Application Default Credentials&lt;/em&gt; (&lt;a href=&#34;https://cloud.google.com/docs/authentication/application-default-credentials&#34;&gt;How Application Default Credentials works&lt;/a&gt;).&lt;/p&gt;&#xA;&lt;p&gt;A continuación, un ejemplo de la &lt;em&gt;magia&lt;/em&gt; de usar ADC y así no tener que generar Service Account Keys.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Google Cloud Workstation Manager - Un script para gestionar Cloud Workstations en Google Cloud</title>
      <link>https://onthedock.github.io/post/241102-cloud-workstation-manager/</link>
      <pubDate>Sat, 02 Nov 2024 17:21:51 +0100</pubDate>
      <guid>https://onthedock.github.io/post/241102-cloud-workstation-manager/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://cloud.google.com/workstations&#34;&gt;Cloud Workstations&lt;/a&gt; nos permite tener la misma máquina a todos los miembros del equipo, independientemente de si usamos un Mac o un equipo con Windows.&#xA;Partiendo de una imagen de contenedor, podemos desplegar una máquina virtual y usar Code OSS (la versión &lt;em&gt;open source&lt;/em&gt; de Visual Studio Code) con las mismas extensiones pre-instaladas, la misma configuración, etc&amp;hellip;&lt;/p&gt;&#xA;&lt;p&gt;Quiero presentar el &lt;em&gt;script&lt;/em&gt; a mis compañeros antes de subirlo a Github, así que en la entrada de hoy me voy a centrar en explicar cómo he simplificado el número de parámetros requeridos para gestionar (crear/arrancar/detener/eliminar) una &lt;em&gt;workstation&lt;/em&gt; sin tener que recordar (o conocer) el nombre del clúster, de la configuración usada, etc&amp;hellip;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
