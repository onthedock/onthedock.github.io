<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Integracion Continua on On The Dock</title>
    <link>https://onthedock.github.io/tags/integracion-continua/</link>
    <description>Recent content in Integracion Continua on On The Dock</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>Handmade with &amp;#9829; by Xavi Aznar</copyright>
    <lastBuildDate>Wed, 23 May 2018 12:12:06 +0200</lastBuildDate>
    <atom:link href="https://onthedock.github.io/tags/integracion-continua/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Pipeline - Análisis de código con Sonarqube</title>
      <link>https://onthedock.github.io/post/180522-pipeline-analisis-de-codigo-con-sonarqube/</link>
      <pubDate>Wed, 23 May 2018 12:12:06 +0200</pubDate>
      <guid>https://onthedock.github.io/post/180522-pipeline-analisis-de-codigo-con-sonarqube/</guid>
      <description>&lt;p&gt;En entradas anteriores hemos &lt;a href=&#34;https://onthedock.github.io/post/180521-subiendo-el-codigo-a-gogs/&#34;&gt;subido el código de la aplicación al repositorio en Gogs&lt;/a&gt; y hemos &lt;a href=&#34;https://onthedock.github.io/post/180521-pipeline-instalacion-de-sonarqube/&#34;&gt;instalado SonarQube&lt;/a&gt; y &lt;a href=&#34;https://onthedock.github.io/post/180520-pipeline-instalacion-y-actualizacion-de-jenkins/&#34;&gt;Jenkins&lt;/a&gt;. Ahora, vamos a configurar Jenkins para que analice el código de la aplicación y detectar fallos incluso antes de compilar la aplicación.&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;Update 2022-01-06&lt;/strong&gt; He actualizado los enlaces externos hacia la documentación de SonarQube. Por favor, revisa la documentación oficial actualizada ya que este artículo se escribió para una versión anterior de SonarQube.&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>Pipeline - Troubleshooting del arranque del contenedor con Sonarqube</title>
      <link>https://onthedock.github.io/post/180521-pipeline-troubleshooting-del-arranque-del-contenedor-con-sonarqube/</link>
      <pubDate>Mon, 21 May 2018 12:37:10 +0200</pubDate>
      <guid>https://onthedock.github.io/post/180521-pipeline-troubleshooting-del-arranque-del-contenedor-con-sonarqube/</guid>
      <description>&lt;p&gt;En las guías y tutoriales en internet siempre funciona todo sin ningún fallo. Sin embargo, lo más habitual es que encontremos problemas en los primeros intentos de poner en marcha una aplicación.&lt;/p&gt;&#xA;&lt;p&gt;Personalmente, creo que el aprendizaje es un proceso de ensayo y error, por lo que se aprende solucionando los errores que nos encontramos.&lt;/p&gt;&#xA;&lt;p&gt;Con esa idea en mente, también intento documentar los fallos que cometo. A continuación tienes el registro de las acciones que realicé para solucionar los problemas encontrados en el arranque de SonarQube.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pipeline - Instalación de Sonarqube</title>
      <link>https://onthedock.github.io/post/180521-pipeline-instalacion-de-sonarqube/</link>
      <pubDate>Mon, 21 May 2018 12:19:43 +0200</pubDate>
      <guid>https://onthedock.github.io/post/180521-pipeline-instalacion-de-sonarqube/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.sonarqube.org/&#34;&gt;SonarQube&lt;/a&gt; es una herramienta de análisis continuo de código.&lt;/p&gt;&#xA;&lt;p&gt;La versión &lt;em&gt;open source&lt;/em&gt; ofrece soporte para 20 lenguajes de programación, mientras que la versión comercial amplía el número de &lt;em&gt;analizadores&lt;/em&gt;. También hay &lt;em&gt;analizadores&lt;/em&gt; creados por la comunidad.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pipeline - Creacion del job en Jenkins</title>
      <link>https://onthedock.github.io/post/180521-pipeline-creacion-del-job-en-jenkins/</link>
      <pubDate>Mon, 21 May 2018 12:03:50 +0200</pubDate>
      <guid>https://onthedock.github.io/post/180521-pipeline-creacion-del-job-en-jenkins/</guid>
      <description>&lt;p&gt;Una vez tenemos código en el repositorio de &lt;a href=&#34;https://onthedock.github.io/post/180521-subiendo-el-codigo-a-gogs/&#34;&gt;Gogs&lt;/a&gt;, para poder avanzar tenemos que definir y configurar el &lt;em&gt;pipeline&lt;/em&gt; en Jenkins.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pipeline - Subiendo el código a Gogs</title>
      <link>https://onthedock.github.io/post/180521-subiendo-el-codigo-a-gogs/</link>
      <pubDate>Mon, 21 May 2018 09:03:13 +0200</pubDate>
      <guid>https://onthedock.github.io/post/180521-subiendo-el-codigo-a-gogs/</guid>
      <description>&lt;p&gt;Ya hemos instalado &lt;a href=&#34;https://onthedock.github.io/post/180520-pipeline-gogs-el-repositorio-de-codigo/&#34;&gt;Gogs&lt;/a&gt; y &lt;a href=&#34;https://onthedock.github.io/post/180520-pipeline-instalacion-y-actualizacion-de-jenkins/&#34;&gt;Jenkins&lt;/a&gt; en nuestro sistema; ahora es el momento de empezar a subir código y ver qué podemos hacer con él.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pipeline - Instalacion y actualizacion de Jenkins</title>
      <link>https://onthedock.github.io/post/180520-pipeline-instalacion-y-actualizacion-de-jenkins/</link>
      <pubDate>Sun, 20 May 2018 07:43:06 +0200</pubDate>
      <guid>https://onthedock.github.io/post/180520-pipeline-instalacion-y-actualizacion-de-jenkins/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://jenkins.io/&#34;&gt;Jenkins&lt;/a&gt; es un servidor de &lt;em&gt;automatización&lt;/em&gt; de código abierto escrito en Java. Es una herramienta clave en el proceso de integración continua y un facilitador de cara a realizar despliegues continuos.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pipeline: Gogs - El repositorio de código</title>
      <link>https://onthedock.github.io/post/180520-pipeline-gogs-el-repositorio-de-codigo/</link>
      <pubDate>Sun, 20 May 2018 07:30:49 +0200</pubDate>
      <guid>https://onthedock.github.io/post/180520-pipeline-gogs-el-repositorio-de-codigo/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://gogs.io&#34;&gt;Gogs&lt;/a&gt; es un servidor de Git escrito en Go. Proporciona un interfaz web similar a GitHub.&lt;/p&gt;&#xA;&lt;p&gt;En esta entrada se describe cómo lanzar los contenedores necesarios para tener una instalación funcional de Gogs.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pipeline: Aplicaciones auxiliares</title>
      <link>https://onthedock.github.io/post/180520-pipeline-aplicaciones-auxiliares/</link>
      <pubDate>Sun, 20 May 2018 07:08:04 +0200</pubDate>
      <guid>https://onthedock.github.io/post/180520-pipeline-aplicaciones-auxiliares/</guid>
      <description>&lt;p&gt;Como indicaba en el entrada &lt;a href=&#34;https://onthedock.github.io/post/180518-integracion-continua-con-jenkins-y-docker/&#34;&gt;que abría esta serie&lt;/a&gt;, además de las aplicaciones que forman parte del &lt;em&gt;pipeline&lt;/em&gt;, uso algunas aplicaciones auxiliares.&lt;/p&gt;&#xA;&lt;p&gt;Estas aplicaciones son &lt;em&gt;MailDev&lt;/em&gt; y &lt;em&gt;Portainer&lt;/em&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pipeline: Consideraciones Generales</title>
      <link>https://onthedock.github.io/post/180519-pipeline-consideraciones-generales/</link>
      <pubDate>Sat, 19 May 2018 20:12:47 +0200</pubDate>
      <guid>https://onthedock.github.io/post/180519-pipeline-consideraciones-generales/</guid>
      <description>&lt;p&gt;El principal objetivo de esta serie de artículos es aprender a construir un &lt;em&gt;pipeline&lt;/em&gt; siguiendo, en la medida de lo posible, las mejores prácticas de cada producto.&lt;/p&gt;&#xA;&lt;p&gt;En esta guía, se muestran los pasos a seguir de principio a fin sin que falle nada; sin embargo, el proceso real es &lt;strong&gt;muy diferente&lt;/strong&gt;, con multitud de errores a lo largo del camino.&lt;/p&gt;&#xA;&lt;p&gt;En esta entrada quiero exponer algunos de los cambios que he realizado, a nivel de diseño de la arquitectura durante la creación del &lt;em&gt;pipeline&lt;/em&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Integración continua con Jenkins y Docker</title>
      <link>https://onthedock.github.io/post/180518-integracion-continua-con-jenkins-y-docker/</link>
      <pubDate>Fri, 18 May 2018 06:42:34 +0200</pubDate>
      <guid>https://onthedock.github.io/post/180518-integracion-continua-con-jenkins-y-docker/</guid>
      <description>&lt;p&gt;En esta serie de artículos quiero construir una &lt;em&gt;pipeline&lt;/em&gt; de integración continua basada en Jenkins sobre Docker.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Jenkins en Docker: puesta en marcha</title>
      <link>https://onthedock.github.io/post/180316-jenkins-en-docker-puesta-en-marcha/</link>
      <pubDate>Fri, 16 Mar 2018 21:39:10 +0100</pubDate>
      <guid>https://onthedock.github.io/post/180316-jenkins-en-docker-puesta-en-marcha/</guid>
      <description>&lt;p&gt;Uno de los casos de uso más frecuentes de Docker es formando parte de una cadena de integración y despliegue continuo (CI/CD) gestionada por Jenkins.&lt;/p&gt;&#xA;&lt;p&gt;En esta serie de artículos vamos a levantar un contenedor con Jenkins sobre Docker y vamos a configur Jenkins paso a paso.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
