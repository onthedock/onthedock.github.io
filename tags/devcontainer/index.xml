<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>devcontainer on On The Dock</title>
    <link>https://onthedock.github.io/tags/devcontainer/</link>
    <description>Recent content in devcontainer on On The Dock</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Handmade with &amp;#9829; by Xavi Aznar</copyright>
    <lastBuildDate>Tue, 05 Sep 2023 20:37:11 +0200</lastBuildDate><atom:link href="https://onthedock.github.io/tags/devcontainer/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Autocompletado de comandos (y ramas) de Git en Devcontainer</title>
      <link>https://onthedock.github.io/post/230905-autocompletado-de-comandos-ramas-para-git-en-devcontainer/</link>
      <pubDate>Tue, 05 Sep 2023 20:37:11 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/230905-autocompletado-de-comandos-ramas-para-git-en-devcontainer/</guid>
      <description>&lt;p&gt;En una entrada anterior (&lt;a href=&#34;https://onthedock.github.io/post/230719-usa-un-contenedor-como-entorno-de-desarrollo-con-devcontainers/&#34;&gt;Usa un contenedor como entorno de desarrollo con &amp;lsquo;devcontainers&amp;rsquo;&lt;/a&gt;) explicaba cómo usar un contenedor y Devcontainers para suplir las carencias de MacOS con respecto a Bash.&lt;/p&gt;
&lt;p&gt;Desde entonces uso Devcontainers más y más; por ejemplo, para desarrollar en Go ya no tengo que levantar una máquina virtual o instalar Go en mi equipo: genero un fichero &lt;code&gt;devcontainer.json&lt;/code&gt;, indico la imagen oficial de Go y ¡listo!&lt;/p&gt;
&lt;p&gt;No todo es perfecto; una de las cosas que últimamente estaba &lt;em&gt;sufriendo&lt;/em&gt; es que Git no autocompleta, por ejemplo, los nombres de las ramas.&lt;/p&gt;
&lt;p&gt;La solución a la que siempre acabo acudiendo (y ejecutando manualmente) es &lt;a href=&#34;https://pagepro.co/blog/autocomplete-git-commands-and-branch-names-in-terminal/&#34;&gt;Autocomplete Git Commands and Branch Names&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Pero claro, yo quería automatizarlo ;)&lt;/p&gt;
&lt;p&gt;Así que hoy explico cómo he conseguido incluir el autocompletado de Git directamente al arrancar un &lt;em&gt;devcontainer&lt;/em&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Usa un contenedor como entorno de desarrollo con &#39;devcontainers&#39;</title>
      <link>https://onthedock.github.io/post/230719-usa-un-contenedor-como-entorno-de-desarrollo-con-devcontainers/</link>
      <pubDate>Wed, 19 Jul 2023 07:43:19 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/230719-usa-un-contenedor-como-entorno-de-desarrollo-con-devcontainers/</guid>
      <description>&lt;h2 id=&#34;contexto&#34;&gt;Contexto&lt;/h2&gt;
&lt;p&gt;Apple no incluye versiones modernas de Bash; la versión incluida por defecto es 3.2. Esto se debe a que a partir de esta versión la licencia que cubre Bash es la GPLv3 y ésta obliga a compartir el código fuente, cosa que Apple no quiere hacer.&lt;/p&gt;
&lt;p&gt;El caso es que ahora uso un Mac M2 para el trabajo y algunas funcionalidades como los &lt;em&gt;arrays asociativos&lt;/em&gt; (&lt;code&gt;name[&amp;quot;dog&amp;quot;]=&amp;quot;snoopy&amp;quot;&lt;/code&gt;), sólo están disponibles en Bash v4 o superior.&lt;/p&gt;
&lt;p&gt;La solución más obvia, actualizar Bash manualmente en el Mac, es posible pero tiene inconvenientes. El Bash &amp;ldquo;nativo&amp;rdquo; de Mac OS se encuentra en &lt;code&gt;/usr/bin&lt;/code&gt;, mientras que otra versión de Bash, sólo puede ser instalada &lt;em&gt;fuera&lt;/em&gt; de &lt;code&gt;/usr/bin&lt;/code&gt;, porque el Mac usa algo llamado &lt;em&gt;System Integrity Protection&lt;/em&gt;, que evita la ejecución de código no autorizado. Aunque &lt;a href=&#34;https://developer.apple.com/documentation/security/disabling_and_enabling_system_integrity_protection&#34;&gt;SIP puede deshabilitarse&lt;/a&gt;, no es una buena idea.&lt;/p&gt;
&lt;p&gt;Dado que en Bash nuestros scripts usan el &lt;em&gt;shebang&lt;/em&gt; &lt;code&gt;#!/bin/bash&lt;/code&gt; (ver &lt;a href=&#34;https://google.github.io/styleguide/shellguide.html#s1.1-which-shell-to-use&#34;&gt;Shell Style Guide de Google&lt;/a&gt;), al ejecutar el script en Mac OS, se usaría Bash 3.2 y no la nueva versión (p.ej, Bash v5).&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
