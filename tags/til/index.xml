<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Til on On The Dock</title>
    <link>https://onthedock.github.io/tags/til/</link>
    <description>Recent content in Til on On The Dock</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>Handmade with &amp;#9829; by Xavi Aznar</copyright>
    <lastBuildDate>Thu, 13 Jul 2023 23:27:08 +0200</lastBuildDate>
    <atom:link href="https://onthedock.github.io/tags/til/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Agrega una línea a un fichero sólo si no está presente #TIL</title>
      <link>https://onthedock.github.io/post/230713-agrega-linea-a-un-fichero-solo-si-no-esta-presente/</link>
      <pubDate>Thu, 13 Jul 2023 23:27:08 +0200</pubDate>
      <guid>https://onthedock.github.io/post/230713-agrega-linea-a-un-fichero-solo-si-no-esta-presente/</guid>
      <description>&lt;p&gt;Ayer estaba revisando un &lt;em&gt;script&lt;/em&gt; desarrollado por un compañero y me llamó la atención la manera en la que solucionaba un problema &amp;ldquo;habitual&amp;rdquo;: ¿cómo añadir una línea a un fichero &lt;em&gt;sólo si no está ya presente&lt;/em&gt;?&lt;/p&gt;</description>
    </item>
    <item>
      <title>Git: Cómo comparar ficheros en ramas diferentes #til</title>
      <link>https://onthedock.github.io/post/230618-git-como-comparar-ficheros-en-ramas-diferentes-til/</link>
      <pubDate>Sun, 18 Jun 2023 07:06:08 +0200</pubDate>
      <guid>https://onthedock.github.io/post/230618-git-como-comparar-ficheros-en-ramas-diferentes-til/</guid>
      <description>&lt;p&gt;Imagina que te encuentras en el siguiente escenario: creas un rama y haces cambios en un fichero.&lt;/p&gt;&#xA;&lt;p&gt;¿Cómo puedes ver qué diferencias hay en el fichero en dos ramas distintas?&lt;/p&gt;&#xA;&lt;p&gt;La solución es mi #TIL (&lt;em&gt;today I learn&lt;/em&gt;) de hoy.&lt;/p&gt;</description>
    </item>
    <item>
      <title>En Jq, los valores pasados mediante &#39;--arg&#39; se tratan como &#39;strings&#39; sea cual sea su tipo #TIL</title>
      <link>https://onthedock.github.io/post/230118-til-jq-considera-strings-los-argumentos/</link>
      <pubDate>Wed, 18 Jan 2023 21:43:12 +0100</pubDate>
      <guid>https://onthedock.github.io/post/230118-til-jq-considera-strings-los-argumentos/</guid>
      <description>&lt;p&gt;Al definir un documento JSON, los campos pueden tener diferentes &lt;a href=&#34;https://json-schema.org/understanding-json-schema/reference/type.html&#34;&gt;&lt;strong&gt;tipos&lt;/strong&gt;&lt;/a&gt;, como &lt;code&gt;string&lt;/code&gt;, &lt;code&gt;number&lt;/code&gt;, &lt;code&gt;boolean&lt;/code&gt;, etc&amp;hellip; Sin embargo, al crear un documento usando &lt;code&gt;--arg&lt;/code&gt;, el valor siempre se trata como &lt;em&gt;string&lt;/em&gt;:&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;code&gt;--arg name value:&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;This option passes a value to the jq program as a predefined variable. If you run jq with &amp;ndash;arg foo bar, then $foo is available in the program and has the value &amp;ldquo;bar&amp;rdquo;. Note that value will be treated as a string, so &amp;ndash;arg foo 123 will bind $foo to &amp;ldquo;123&amp;rdquo;.&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
  </channel>
</rss>
