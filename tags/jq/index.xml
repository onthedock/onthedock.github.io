<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jq on On The Dock</title>
    <link>https://onthedock.github.io/tags/jq/</link>
    <description>Recent content in Jq on On The Dock</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>Handmade with &amp;#9829; by Xavi Aznar</copyright>
    <lastBuildDate>Sat, 24 Feb 2024 10:00:27 +0100</lastBuildDate>
    <atom:link href="https://onthedock.github.io/tags/jq/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Jq: Manual De Supervivencia</title>
      <link>https://onthedock.github.io/post/240224-jq-manual-de-supervivencia/</link>
      <pubDate>Sat, 24 Feb 2024 10:00:27 +0100</pubDate>
      <guid>https://onthedock.github.io/post/240224-jq-manual-de-supervivencia/</guid>
      <description>&lt;p&gt;El otro día &lt;a href=&#34;https://www.youtube.com/@PeladoNerd&#34;&gt;@PeladoNerd&lt;/a&gt; confesaba en este vídeo &lt;a href=&#34;https://youtu.be/CWcuNti7VR8&#34;&gt;SADSERVERS / Kihei, Unimak Island, Ivujivik (MEDIUM)&lt;/a&gt; que no entendía como funcionaba &lt;a href=&#34;https://jqlang.github.io/jq/&#34;&gt;Jq&lt;/a&gt;.&#xA;Inmediatamente empaticé con su frustación; es, sin duda, un sentimiento generalizado.&lt;/p&gt;&#xA;&lt;p&gt;Jq es una herramienta realmente potente; pero &amp;ldquo;con un gran poder&amp;rdquo;, llega una curva de aprendizaje muy dura.&lt;/p&gt;&#xA;&lt;p&gt;Por eso me he decidido a escribir este artículo: no porque sea un super gurú de Jq, que no lo soy; pero creo que puedo aportar algo de claridad sobre la manera de &lt;em&gt;aproximarse&lt;/em&gt; a Jq evitando los problemas más habituales.&lt;/p&gt;</description>
    </item>
    <item>
      <title>En Jq, los valores pasados mediante &#39;--arg&#39; se tratan como &#39;strings&#39; sea cual sea su tipo #TIL</title>
      <link>https://onthedock.github.io/post/230118-til-jq-considera-strings-los-argumentos/</link>
      <pubDate>Wed, 18 Jan 2023 21:43:12 +0100</pubDate>
      <guid>https://onthedock.github.io/post/230118-til-jq-considera-strings-los-argumentos/</guid>
      <description>&lt;p&gt;Al definir un documento JSON, los campos pueden tener diferentes &lt;a href=&#34;https://json-schema.org/understanding-json-schema/reference/type.html&#34;&gt;&lt;strong&gt;tipos&lt;/strong&gt;&lt;/a&gt;, como &lt;code&gt;string&lt;/code&gt;, &lt;code&gt;number&lt;/code&gt;, &lt;code&gt;boolean&lt;/code&gt;, etc&amp;hellip; Sin embargo, al crear un documento usando &lt;code&gt;--arg&lt;/code&gt;, el valor siempre se trata como &lt;em&gt;string&lt;/em&gt;:&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;code&gt;--arg name value:&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;This option passes a value to the jq program as a predefined variable. If you run jq with &amp;ndash;arg foo bar, then $foo is available in the program and has the value &amp;ldquo;bar&amp;rdquo;. Note that value will be treated as a string, so &amp;ndash;arg foo 123 will bind $foo to &amp;ldquo;123&amp;rdquo;.&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>Convertir un fichero CSV en JSON usando Jq</title>
      <link>https://onthedock.github.io/post/230111-convertir-csv-en-json/</link>
      <pubDate>Wed, 11 Jan 2023 20:51:00 +0100</pubDate>
      <guid>https://onthedock.github.io/post/230111-convertir-csv-en-json/</guid>
      <description>&lt;p&gt;Una de las automatizaciones que hemos desarrollado consiste en un &lt;em&gt;autoservicio&lt;/em&gt; para que los clientes puedan gestionar políticas en un &lt;em&gt;proxy&lt;/em&gt;.&lt;/p&gt;&#xA;&lt;p&gt;El usuario genera un fichero CSV con varios parámetros y los &amp;ldquo;sube&amp;rdquo; a un repositorio Git en su proyecto. El evento desencadena la ejecución de una &lt;em&gt;pipeline&lt;/em&gt; en la que procesamos el fichero, validamos su contenido, etc. Una vez &lt;em&gt;procesados&lt;/em&gt;, construimos un objeto JSON para cada una de las reglas, las agregamos y finalmente las integramos en el documento de configuración del &lt;em&gt;proxy&lt;/em&gt; del cliente (que contiene otros campos que el cliente no debe editar).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Exprimiendo jq: cómo manipular ficheros JSON</title>
      <link>https://onthedock.github.io/post/221012-exprimiendo-jq/</link>
      <pubDate>Wed, 12 Oct 2022 13:50:16 +0200</pubDate>
      <guid>https://onthedock.github.io/post/221012-exprimiendo-jq/</guid>
      <description>&lt;p&gt;En esta entrada describo un caso práctico sobre cómo manipular un documento JSON (una &lt;em&gt;IAM Policy&lt;/em&gt; de Google Cloud) para añadir un nuevo miembro a un rol determinado.&lt;/p&gt;&#xA;&lt;p&gt;Las políticas pueden gestionarse directamente mediante la herramienta de línea de comandos &lt;code&gt;gcloud&lt;/code&gt;, por ejemplo, sobre un &lt;a href=&#34;https://cloud.google.com/sdk/gcloud/reference/projects/add-iam-policy-binding&#34;&gt;&lt;em&gt;folder&lt;/em&gt;&lt;/a&gt;. Sin embargo puede ser interesante disponer de un registro con el &lt;em&gt;estado deseado&lt;/em&gt; de los permisos de los recursos y así evitar &lt;em&gt;drift&lt;/em&gt; (por ejemplo, si alguien modifica los permisos mediante &lt;code&gt;gcloud&lt;/code&gt; o desde la consola).&lt;/p&gt;&#xA;&lt;p&gt;Aunque el ejemplo se centra en un fichero de políticas de GCP, la entrada describe técnicas aplicables a la manipulación de cualquier fichero JSON.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Sacando partido de la funcionalidad de jq</title>
      <link>https://onthedock.github.io/post/220519-jq/</link>
      <pubDate>Thu, 19 May 2022 20:05:53 +0200</pubDate>
      <guid>https://onthedock.github.io/post/220519-jq/</guid>
      <description>&lt;p&gt;Siguendo con el &lt;a href=&#34;https://onthedock.github.io/post/220518-obtener-respuesta-y-http-status-con-curl/&#34;&gt;tema de ayer&lt;/a&gt;, hoy quiero revisar otro bloque de código.&lt;/p&gt;&#xA;&lt;p&gt;En este caso, se construye un &lt;em&gt;array&lt;/em&gt; en JSON usando Bash &lt;em&gt;puro&lt;/em&gt;, cuando es el proceso se simplifica &lt;strong&gt;enormemente&lt;/strong&gt; gracias a la función &lt;code&gt;--slurp&lt;/code&gt; de &lt;code&gt;jq&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
