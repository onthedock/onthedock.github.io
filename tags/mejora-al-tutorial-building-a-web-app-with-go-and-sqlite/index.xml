<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mejora al tutorial &#39;Building a Web App with Go and SQLite&#39; on On The Dock</title>
    <link>https://onthedock.github.io/tags/mejora-al-tutorial-building-a-web-app-with-go-and-sqlite/</link>
    <description>Recent content in Mejora al tutorial &#39;Building a Web App with Go and SQLite&#39; on On The Dock</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Handmade with &amp;#9829; by Xavi Aznar</copyright>
    <lastBuildDate>Fri, 12 Aug 2022 14:17:44 +0200</lastBuildDate><atom:link href="https://onthedock.github.io/tags/mejora-al-tutorial-building-a-web-app-with-go-and-sqlite/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Mejora al tutorial &#39;Building a Web App with Go and SQLite&#39;: devolver el Id del nuevo registro</title>
      <link>https://onthedock.github.io/post/220812-mejora-al-tutorial-devolver-id-de-nuevo-registro/</link>
      <pubDate>Fri, 12 Aug 2022 14:17:44 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/220812-mejora-al-tutorial-devolver-id-de-nuevo-registro/</guid>
      <description>&lt;p&gt;Habitualmente, al insertar un valor en el &lt;em&gt;backend&lt;/em&gt; a través de la API, si la operación tiene éxito, se devuelve el identificador del registro creado.&lt;/p&gt;
&lt;p&gt;En el tutorial de Jeremy Morgan &lt;a href=&#34;https://www.allhandsontech.com/programming/golang/web-app-sqlite-go/&#34;&gt;Building a Web App with Go and SQLite&lt;/a&gt;, se devuelve un mensaje genérico &lt;code&gt;{&amp;quot;message&amp;quot;: &amp;quot;success&amp;quot;}&lt;/code&gt;, que no permite realizar acciones adicionales sobre el nuevo registro.&lt;/p&gt;
&lt;p&gt;En esta entrada modificamos el código de la función &lt;code&gt;AddPerson&lt;/code&gt; para devolver el identificador del nuevo registro.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title> Mejora al tutorial &#39;Building a Web App with Go and SQLite&#39;: Devolver los registros posteriores al especificado</title>
      <link>https://onthedock.github.io/post/220812-mejora-al-tutorial-devolver-los-registros-posteriores-al-especificado/</link>
      <pubDate>Fri, 12 Aug 2022 12:00:52 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/220812-mejora-al-tutorial-devolver-los-registros-posteriores-al-especificado/</guid>
      <description>&lt;p&gt;En la entrada &lt;a href=&#34;%20ref%20%22220812-mejora-al-tutorial-limitar-el-numero-de-registros-devueltos-por-defecto.md%22&#34;&gt;Mejora al tutorial &amp;lsquo;Building a Web App with Go and SQLite&amp;rsquo;: limitar el número de registros devueltos por defecto&lt;/a&gt; modificamos el código original del tutorial de Jeremy Morgan &lt;a href=&#34;https://www.allhandsontech.com/programming/golang/web-app-sqlite-go/&#34;&gt;Building a Web App with Go and SQLite&lt;/a&gt; para que el usuario pudiera especificar el número de resultados devueltos al consultar la API a través del parámetro &lt;code&gt;count&lt;/code&gt;: &lt;code&gt;http://&amp;lt;URL&amp;gt;/api/v1/person?count=15&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;El problema es que siempre se devuelven las entradas empezando por la de Id más bajo (habitualmente, &lt;code&gt;1&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;En esta entrada, modificamos la función &lt;code&gt;getPersonById&lt;/code&gt; para introducir también el parámetro &lt;code&gt;count&lt;/code&gt; y que se devuelvan &lt;code&gt;count&lt;/code&gt; resultados &lt;strong&gt;a partir del Id especificado&lt;/strong&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Mejora al tutorial &#39;Building a Web App with Go and SQLite&#39;: limitar el número de registros devueltos por defecto</title>
      <link>https://onthedock.github.io/post/220812-mejora-al-tutorial-limitar-el-numero-de-registros-devueltos-por-defecto/</link>
      <pubDate>Fri, 12 Aug 2022 08:05:44 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/220812-mejora-al-tutorial-limitar-el-numero-de-registros-devueltos-por-defecto/</guid>
      <description>&lt;p&gt;En la mayoría de tutoriales sobre cómo construir una API en Go (incluído el &lt;a href=&#34;https://go.dev/doc/tutorial/web-service-gin#all_items&#34;&gt;tutorial&lt;/a&gt; de la documentación oficial de Go), el primer &lt;em&gt;endpoint&lt;/em&gt; que se describe es el que usa el método &lt;code&gt;GET&lt;/code&gt; y que recupera &lt;strong&gt;todos&lt;/strong&gt; los registros de la base de datos.&lt;/p&gt;
&lt;p&gt;Sin embargo, en el mundo real, las APIs devuelven un número limitado de registros y un &lt;em&gt;índice&lt;/em&gt;; en una nueva consulta, se puede obtener un nuevo conjunto de resultados  (y un nuevo índice), etc. Esto es así porque el resultado de la consulta con &lt;code&gt;GET&lt;/code&gt; puede, potencialmente, devolver un número elevado de registros.&lt;/p&gt;
&lt;p&gt;En el tutorial &lt;a href=&#34;https://www.allhandsontech.com/programming/golang/web-app-sqlite-go/&#34;&gt;Building a Web App with Go and SQLite&lt;/a&gt;, se incluye una limitación &lt;em&gt;hardcodeada&lt;/em&gt; en el código para evitar, precisamente, que se devuelvan todos los valores en la base de datos de ejemplo (1000 registros).&lt;/p&gt;
&lt;p&gt;En este artículo, voy a mostrar cómo obtener el valor desde la &lt;em&gt;queryString&lt;/em&gt; para que sea configurable desde la llamada a la API.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
