<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Minio on On The Dock</title>
    <link>https://onthedock.github.io/tags/minio/</link>
    <description>Recent content in Minio on On The Dock</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>Handmade with &amp;#9829; by Xavi Aznar</copyright>
    <lastBuildDate>Fri, 11 Mar 2022 18:59:41 +0100</lastBuildDate>
    <atom:link href="https://onthedock.github.io/tags/minio/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Guardar el estado de Terraform en MinIO</title>
      <link>https://onthedock.github.io/post/220311-guardar-el-estado-de-terraform-en-minio/</link>
      <pubDate>Fri, 11 Mar 2022 18:59:41 +0100</pubDate>
      <guid>https://onthedock.github.io/post/220311-guardar-el-estado-de-terraform-en-minio/</guid>
      <description>&lt;p&gt;Terraform almacena el &lt;em&gt;estado&lt;/em&gt; de la configuración en un fichero. Este fichero es &lt;strong&gt;crítico&lt;/strong&gt; para que Terraform pueda mantener la coherencia entre el estado definido en los ficheros de configuración y el estado &lt;em&gt;real&lt;/em&gt; de la infraestructura desplegada.&lt;/p&gt;&#xA;&lt;p&gt;Por defecto, Terraform almacena el &lt;em&gt;estado&lt;/em&gt; de forma local; para facilitar la colaboración entre diferentes miembros de un equipo -entre otros casos de uso-, Terraform ofrece la posibilidad de usar otras ubicaciones para guardar el estado. Estas &lt;em&gt;ubicaciones&lt;/em&gt; reciben el nombre de &lt;em&gt;backends&lt;/em&gt; en Terraform (y hay unos cuantos disponibles, como puedes observar desplegando la entrada &lt;a href=&#34;https://www.terraform.io/language/settings/backends&#34;&gt;Available Backends&lt;/a&gt; en la web de Terraform).&lt;/p&gt;&#xA;&lt;p&gt;Una opción habitual es la de usar un &lt;em&gt;bucket&lt;/em&gt; en un servicio como &lt;a href=&#34;https://www.terraform.io/language/settings/backends/s3&#34;&gt;S3&lt;/a&gt; de AWS como &lt;em&gt;remote backend&lt;/em&gt;. Pero si no tienes acceso a una cuenta de AWS, puedes usar &lt;a href=&#34;https://docs.min.io/docs/MinIO-docker-quickstart-guide.html&#34;&gt;MinIO&lt;/a&gt; para trabajar con un &lt;em&gt;backend&lt;/em&gt; de tipo S3 de forma completamente &lt;em&gt;offline&lt;/em&gt; (por ejemplo, para aprender cómo funciona Terraform ;-D )&lt;/p&gt;</description>
    </item>
    <item>
      <title>Configura MinIO en Kubernetes usando Jobs y el cliente de MinIO &#39;mc&#39;</title>
      <link>https://onthedock.github.io/post/210403-configura-minio-en-k8s-usando-jobs-y-el-cliente-mc/</link>
      <pubDate>Sat, 03 Apr 2021 09:58:50 +0200</pubDate>
      <guid>https://onthedock.github.io/post/210403-configura-minio-en-k8s-usando-jobs-y-el-cliente-mc/</guid>
      <description>&lt;p&gt;En la entrada anterior, &lt;a href=&#34;https://onthedock.github.io/post/210403-minio-en-kubernetes/&#34;&gt;MinIO en Kubernetes&lt;/a&gt;, explicaba cómo desplegar MinIO en Kubernetes (de forma manual).&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://docs.min.io/docs/minio-client-quickstart-guide.html&#34;&gt;&lt;code&gt;mc&lt;/code&gt;&lt;/a&gt; se puede usar como herramienta de línea de comandos o como contenedor &lt;a href=&#34;https://hub.docker.com/r/minio/mc&#34;&gt;&lt;code&gt;minio/mc&lt;/code&gt;&lt;/a&gt;; sin embargo, en esta entrada veremos cómo usarlo en &lt;em&gt;Jobs&lt;/em&gt; de Kubernetes para configurar el &lt;em&gt;alias&lt;/em&gt; de un servidor de MinIO y crear un &lt;em&gt;bucket&lt;/em&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Minio en Kubernetes</title>
      <link>https://onthedock.github.io/post/210403-minio-en-kubernetes/</link>
      <pubDate>Sat, 03 Apr 2021 09:02:58 +0200</pubDate>
      <guid>https://onthedock.github.io/post/210403-minio-en-kubernetes/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://min.io/&#34;&gt;MinIO&lt;/a&gt; proporciona almacenamiento de objetos compatible con AWS S3. Desde la última vez que revisé este producto, MinIO ha crecido hasta convertirse en una solución de calidad empresarial.&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;También han cambiado el logo, y por lo que veo, el &amp;ldquo;flamenco&amp;rdquo; o lo que sea el animal del logo ha quedado relegado al &lt;code&gt;favicon&lt;/code&gt; y el &lt;em&gt;footer&lt;/em&gt; de la página web&amp;hellip;Yo mantendré por ahora el logo &amp;ldquo;antiguo&amp;rdquo; (que curiosamente, tiene al pájaro mirando hacia la izquierda &lt;code&gt;¯\_(ツ)_/¯&lt;/code&gt;)&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;En este artículo, voy a desplegarlo sobre Kubernetes de forma manual con un sólo servidor. Usaremos el almacenamiento en MinIO como destino de las copias de seguridad del clúster de Kubernetes usando Velero (en un próximo artículo).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Probando Minio</title>
      <link>https://onthedock.github.io/post/170820-probando-minio/</link>
      <pubDate>Sun, 20 Aug 2017 21:28:20 +0200</pubDate>
      <guid>https://onthedock.github.io/post/170820-probando-minio/</guid>
      <description>&lt;p&gt;Minio proporciona un servidor de almacenamiento distribuido compatible con el API de Amazon AWS S3.&lt;/p&gt;&#xA;&lt;p&gt;En esta entrada comento las pruebas que he estado realizando usando Minio tanto el cliente como el servidor en contenedores Docker.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
