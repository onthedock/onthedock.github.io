<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Automation on On The Dock</title>
    <link>https://onthedock.github.io/tags/automation/</link>
    <description>Recent content in Automation on On The Dock</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>Handmade with &amp;#9829; by Xavi Aznar</copyright>
    <lastBuildDate>Sat, 25 May 2024 13:41:03 +0200</lastBuildDate>
    <atom:link href="https://onthedock.github.io/tags/automation/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Instalar Ansible en un contenedor</title>
      <link>https://onthedock.github.io/post/240525-instalar-ansible-en-un-contenedor/</link>
      <pubDate>Sat, 25 May 2024 13:41:03 +0200</pubDate>
      <guid>https://onthedock.github.io/post/240525-instalar-ansible-en-un-contenedor/</guid>
      <description>&lt;p&gt;Después de un tiempo cogiendo polvo, he decidido darle una segunda vida a mi antiguo equipo de laboratorio.&#xA;Aunque se trata de un sólo equipo, quería practicar con Ansible para automatizar la instalación de Docker.&#xA;No quería instalar Ansible en mi equipo y pensé que lo ideal era usar un contenedor como &lt;em&gt;máquina de control&lt;/em&gt;.&#xA;Sin embargo, no he encontrado ninguna imagen (fiable/actualizada) de Ansible en DockerHub, por lo que me animé a construir la mía.&lt;/p&gt;&#xA;&lt;p&gt;En este artículo, explico cómo.&lt;/p&gt;</description>
    </item>
    <item>
      <title>En Jq, los valores pasados mediante &#39;--arg&#39; se tratan como &#39;strings&#39; sea cual sea su tipo #TIL</title>
      <link>https://onthedock.github.io/post/230118-til-jq-considera-strings-los-argumentos/</link>
      <pubDate>Wed, 18 Jan 2023 21:43:12 +0100</pubDate>
      <guid>https://onthedock.github.io/post/230118-til-jq-considera-strings-los-argumentos/</guid>
      <description>&lt;p&gt;Al definir un documento JSON, los campos pueden tener diferentes &lt;a href=&#34;https://json-schema.org/understanding-json-schema/reference/type.html&#34;&gt;&lt;strong&gt;tipos&lt;/strong&gt;&lt;/a&gt;, como &lt;code&gt;string&lt;/code&gt;, &lt;code&gt;number&lt;/code&gt;, &lt;code&gt;boolean&lt;/code&gt;, etc&amp;hellip; Sin embargo, al crear un documento usando &lt;code&gt;--arg&lt;/code&gt;, el valor siempre se trata como &lt;em&gt;string&lt;/em&gt;:&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;code&gt;--arg name value:&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;This option passes a value to the jq program as a predefined variable. If you run jq with &amp;ndash;arg foo bar, then $foo is available in the program and has the value &amp;ldquo;bar&amp;rdquo;. Note that value will be treated as a string, so &amp;ndash;arg foo 123 will bind $foo to &amp;ldquo;123&amp;rdquo;.&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>Convertir un fichero CSV en JSON usando Jq</title>
      <link>https://onthedock.github.io/post/230111-convertir-csv-en-json/</link>
      <pubDate>Wed, 11 Jan 2023 20:51:00 +0100</pubDate>
      <guid>https://onthedock.github.io/post/230111-convertir-csv-en-json/</guid>
      <description>&lt;p&gt;Una de las automatizaciones que hemos desarrollado consiste en un &lt;em&gt;autoservicio&lt;/em&gt; para que los clientes puedan gestionar políticas en un &lt;em&gt;proxy&lt;/em&gt;.&lt;/p&gt;&#xA;&lt;p&gt;El usuario genera un fichero CSV con varios parámetros y los &amp;ldquo;sube&amp;rdquo; a un repositorio Git en su proyecto. El evento desencadena la ejecución de una &lt;em&gt;pipeline&lt;/em&gt; en la que procesamos el fichero, validamos su contenido, etc. Una vez &lt;em&gt;procesados&lt;/em&gt;, construimos un objeto JSON para cada una de las reglas, las agregamos y finalmente las integramos en el documento de configuración del &lt;em&gt;proxy&lt;/em&gt; del cliente (que contiene otros campos que el cliente no debe editar).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Clúster de K3s: actualización del script de despliegue</title>
      <link>https://onthedock.github.io/post/230108-actualizando-el-script-de-despliegue-del-cluster-de-k3s/</link>
      <pubDate>Sun, 08 Jan 2023 13:35:14 +0100</pubDate>
      <guid>https://onthedock.github.io/post/230108-actualizando-el-script-de-despliegue-del-cluster-de-k3s/</guid>
      <description>&lt;p&gt;Después de un tiempo focalizado casi exclusivamente en aprender Go, hoy he vuelto a &lt;em&gt;mis raíces&lt;/em&gt;: Kubernetes.&lt;/p&gt;&#xA;&lt;p&gt;En el repositorio &lt;a href=&#34;https://github.com/onthedock/vagrant&#34;&gt;onthedock/vagrant&lt;/a&gt; tengo los &lt;em&gt;scripts&lt;/em&gt; que me permiten desplegar varias máquinas virtuales usando Vagrant, instalar K3s y configurar un clúster de Kubernetes con (en este momento) un nodo &lt;em&gt;master&lt;/em&gt; y dos &lt;em&gt;workers&lt;/em&gt;. Como parte de la automatización, también despliego Longhorn como &lt;em&gt;storageClass&lt;/em&gt; .&lt;/p&gt;&#xA;&lt;p&gt;Hoy he testeado con éxito el despliegue de ArgoCD y Gitea en el clúster, dando un pasito adelante para desplegar una plataforma completa de desarrollo sobre Kubernetes.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Error en Vagrant tras actualizar a Pop_Os! 22.04</title>
      <link>https://onthedock.github.io/post/220507-error-en-vagrant-tras-actualizar-a-pop-os-22-04/</link>
      <pubDate>Sat, 07 May 2022 10:55:52 +0200</pubDate>
      <guid>https://onthedock.github.io/post/220507-error-en-vagrant-tras-actualizar-a-pop-os-22-04/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;em&gt;TL,DR;&lt;/em&gt; Solución en &lt;a href=&#34;https://discuss.hashicorp.com/t/vagrant-up-error-on-ubuntu-22-04-pkeys-are-immutable-on-openssl-3-0/38734&#34;&gt;Vagrant up error on Ubuntu 22.04: pkeys are immutable on OpenSSL 3.0&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;Ayer actualicé a la nueva versión de PoP_OS!, basada en Ubuntu 22.04 LTS. Todo funcionó de maravilla, como debe ser. El único problema -por llamarlo de algún modo- identificado tras la actualización ha sido la pérdida de la configuración de &lt;a href=&#34;https://github.com/Swordfish90/cool-retro-term&#34;&gt;Cool Retro Term&lt;/a&gt;; &lt;em&gt;no big deal&lt;/em&gt;&amp;hellip;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Actualizar ArgoCD - ¡ojo! se sobrescriben los ConfigMap de configuración</title>
      <link>https://onthedock.github.io/post/220213-actualizar-argocd/</link>
      <pubDate>Sun, 13 Feb 2022 09:04:04 +0100</pubDate>
      <guid>https://onthedock.github.io/post/220213-actualizar-argocd/</guid>
      <description>&lt;p&gt;A raíz de la entrada anterior &lt;a href=&#34;https://onthedock.github.io/post/220212-instalacion-y-acceso-a-la-consola/&#34;&gt;GitOps con ArgoCD - Instalación y acceso a la consola&lt;/a&gt; he visto que la versión desplegada en el clúster de laboratorio era la 2.2.1, mientras que la versión actual es la 2.2.5.&lt;/p&gt;&#xA;&lt;p&gt;Antes de actualizar, al tratarse de una versión &lt;em&gt;patch release&lt;/em&gt;, no es necesario tener en cuenta ninguna consideración especial, según se indica en la documentación oficial &lt;a href=&#34;https://argo-cd.readthedocs.io/en/stable/operator-manual/upgrading/overview/&#34;&gt;Upgrading &amp;gt; Overview&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Sin embargo, aplicando el fichero correspondiente a la última versión estable, &lt;strong&gt;se sobreescriben los &lt;em&gt;ConfigMaps&lt;/em&gt; de configuración&lt;/strong&gt;, por lo que las modificaciones realizadas se pierden; en mi caso, la configuración del modo &lt;em&gt;inseguro&lt;/em&gt; necesario para el acceso a través de un &lt;em&gt;ingress&lt;/em&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Como solución temporal, se puede aplicar de nuevo el fichero con el &lt;em&gt;ConfigMap&lt;/em&gt; y ejecutar &lt;code&gt;kubectl -n argocd rollout restart deploy argocd-server&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>GitOps con ArgoCD - Instalación y acceso a la consola</title>
      <link>https://onthedock.github.io/post/220212-instalacion-y-acceso-a-la-consola/</link>
      <pubDate>Sat, 12 Feb 2022 15:39:46 +0100</pubDate>
      <guid>https://onthedock.github.io/post/220212-instalacion-y-acceso-a-la-consola/</guid>
      <description>&lt;p&gt;GitOps es una forma de gestionar los clústers de Kubernetes y el proceso de &lt;em&gt;application delivery&lt;/em&gt;, según consta en la definición que hacen los inventores del término, el equipo de Weave.works en &lt;a href=&#34;https://www.weave.works/technologies/gitops/&#34;&gt;What is GitOps?&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;El concepto &lt;em&gt;gitOps&lt;/em&gt; proporciona un modelo operativo en el que &lt;em&gt;el estado deseado&lt;/em&gt; del clúster (y de las aplicaciones desplegadas en él) se encuentra definido de forma &lt;strong&gt;declarativa&lt;/strong&gt; en un repositorio Git.&lt;/p&gt;&#xA;&lt;p&gt;Un agente se encarga de reconciliar el &lt;em&gt;estado deseado&lt;/em&gt; (en Git) con el &lt;em&gt;estado real&lt;/em&gt; (en Kubernetes), considerando -en general- como &lt;strong&gt;fuente de la verdad&lt;/strong&gt; el contenido del repositorio.&lt;/p&gt;&#xA;&lt;p&gt;Aunque Weave.works desarrolló inicialmente &lt;a href=&#34;https://fluxcd.io/&#34;&gt;Flux&lt;/a&gt; (ahora forma parte de la CNCF), en este &lt;em&gt;post&lt;/em&gt; hablaré de &lt;a href=&#34;https://argo-cd.readthedocs.io/en/stable/&#34;&gt;ArgoCD&lt;/a&gt;. Hay otras herramientas con las que implementar GitOps, pero sin duda Flux y ArgoCD son las referencias indiscutibles.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Crear usuarios (usando recursos nativos) en Kubernetes 1.19&#43;</title>
      <link>https://onthedock.github.io/post/211205-crear-usuarios-usando-recursos-nativos-en-kubernetes-1.19/</link>
      <pubDate>Sun, 05 Dec 2021 19:57:28 +0100</pubDate>
      <guid>https://onthedock.github.io/post/211205-crear-usuarios-usando-recursos-nativos-en-kubernetes-1.19/</guid>
      <description>&lt;p&gt;Hace unas entradas, en &lt;a href=&#34;https://onthedock.github.io/post/211010-crear-usuarios-en-k3s/&#34;&gt;&#xA;Crear usuarios en Kubernetes (y en K3s)&lt;/a&gt;, escribía sobre cómo generar nuevos usuarios con acceso al clúster de Kubernetes usando un fichero &lt;code&gt;kubeconfig&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;El método descrito implicaba extraer fuera del clúster el certificado privado de la entidad certificadora (CA) de Kubernetes, lo que no me parecía la mejor solución.&lt;/p&gt;&#xA;&lt;p&gt;Desde Kubernetes 1.19 existe un nuevo recurso en la API, el &lt;code&gt;CertificateSigningRequest&lt;/code&gt;, que permite firmar certificados para proporcionar acceso (por ejemplo) al clúster.&lt;/p&gt;&#xA;&lt;p&gt;En esta entrada se describe cómo aprovechar esta nueva funcionalidad para dar acceso a un usuario usando un certificado firmado por la CA del clúster.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Prueba de Concepto de notificaciones via CloudWatch Events desde CloudFormation (sin Lambdas)</title>
      <link>https://onthedock.github.io/post/200510-prueba-de-concepto-de-notificaciones-via-sns-para-cfn/</link>
      <pubDate>Sun, 10 May 2020 00:42:51 +0200</pubDate>
      <guid>https://onthedock.github.io/post/200510-prueba-de-concepto-de-notificaciones-via-sns-para-cfn/</guid>
      <description>&lt;p&gt;En la entrada &lt;a href=&#34;https://onthedock.github.io/post/200507-envio-de-eventos-de-cfn-a-cwevents/&#34;&gt;Envío de eventos de CloudFormation a CloudWatch Events&lt;/a&gt; explicaba una manera alternativa -sin Lambdas- para enviar notificaciones SNS con información de ARNs de recursos generados en CloudFormation a través de CloudWatch Events.&lt;/p&gt;&#xA;&lt;p&gt;En esta entrada explico cómo he realizado una prueba de concepto para validar que es viable.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Automatizando la configuracion de una VM para Ansible</title>
      <link>https://onthedock.github.io/post/181216-automatizando-la-configuracion-previa-de-una-vm-para-ansible/</link>
      <pubDate>Sun, 16 Dec 2018 13:55:30 +0100</pubDate>
      <guid>https://onthedock.github.io/post/181216-automatizando-la-configuracion-previa-de-una-vm-para-ansible/</guid>
      <description>&lt;p&gt;Con Ansible podemos automatizar la gestión de la configuración de las máquinas virtuales (o no) que creamos. Pero para poder explotar la potencia de Ansible necesitamos que la máquina gestionada cumpla unos requisitos previos: disponer de Python 2.6 o superior y que Ansible pueda conectar con la máquina.&lt;/p&gt;&#xA;&lt;p&gt;Todas estas tareas se pueden automatizar, así que vamos a ver cómo conseguirlo.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Automatizando la instalación de Gitea (con Docker Compose)</title>
      <link>https://onthedock.github.io/post/180715-automatizando-gitea-con-docker-compose/</link>
      <pubDate>Sun, 15 Jul 2018 11:35:54 +0200</pubDate>
      <guid>https://onthedock.github.io/post/180715-automatizando-gitea-con-docker-compose/</guid>
      <description>&lt;p&gt;En la &lt;a href=&#34;https://onthedock.github.io/post/180715-automatizando-gitea-sin-docker-compose/&#34;&gt;entrada anterior&lt;/a&gt; explicaba cómo automatizar la instalación de Gitea usando un script y Docker.&lt;/p&gt;&#xA;&lt;p&gt;Todos los pasos necesarios para crear los volúmenes de datos, la &lt;em&gt;red interna&lt;/em&gt; entre Gitea y la base de datos, etc usan Docker.&lt;/p&gt;&#xA;&lt;p&gt;En esta entrada usaremos &lt;a href=&#34;https://docs.docker.com/compose/&#34;&gt;Docker Compose&lt;/a&gt; para obtener el mismo resultado y analizar las diferencias entre los dos métodos de instalación.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Error `File already exists` al ejecutar vagrant package</title>
      <link>https://onthedock.github.io/post/180120-error-file-already-exists-al-ejecutar-vagrant-package/</link>
      <pubDate>Sat, 20 Jan 2018 22:01:35 +0100</pubDate>
      <guid>https://onthedock.github.io/post/180120-error-file-already-exists-al-ejecutar-vagrant-package/</guid>
      <description>&lt;p&gt;La manera más sencilla de crear una &lt;em&gt;box&lt;/em&gt; personalizada para Vagrant es reutilizar una máquina virtual ya creada con Vagrant. Para facilitar este proceso, Vagrant proporciona el comando &lt;code&gt;package&lt;/code&gt;, que &lt;em&gt;empaqueta&lt;/em&gt; una máquina virtual existente en el formato &lt;em&gt;box&lt;/em&gt; de Vagrant.&lt;/p&gt;&#xA;&lt;p&gt;En esta entrada comento los pasos que hay que realizar paso a paso para crear una &lt;em&gt;box&lt;/em&gt; personalizada. También indico el origen y cómo solucionar el error &lt;code&gt;File already exists&lt;/code&gt; que he encontrado al ejecutar &lt;code&gt;vagrant package&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Instalando Docker-CE usando Vagrant shell provisioning</title>
      <link>https://onthedock.github.io/post/180114-instalando-docker-ce-usando-vagrant-shell-provisioning/</link>
      <pubDate>Sun, 14 Jan 2018 21:11:00 +0100</pubDate>
      <guid>https://onthedock.github.io/post/180114-instalando-docker-ce-usando-vagrant-shell-provisioning/</guid>
      <description>&lt;p&gt;A raíz de las pruebas realizadas en la &lt;a href=&#34;https://onthedock.github.io/post/180114-vagrant-segunda-oportunidad/&#34;&gt;segunda toma de contacto&lt;/a&gt; con &lt;!-- raw HTML omitted --&gt;Vagrant&lt;!-- raw HTML omitted --&gt;, he creado un script para instalar Docker-CE como &lt;strong&gt;prueba de concepto&lt;/strong&gt; de &lt;em&gt;shell provisioning&lt;/em&gt; sobre Vagrant.&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;En vez de instalar una y otra vez Docker desde los repositorios, es mucho más eficiente crear una &lt;a href=&#34;https://www.vagrantup.com/docs/boxes/base.html&#34;&gt;&lt;em&gt;box&lt;/em&gt; personalizada&lt;/a&gt; con el software que necesitamos.&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>Vagrant: Segunda oportunidad (y mejores sensaciones que la primera vez)</title>
      <link>https://onthedock.github.io/post/180114-vagrant-segunda-oportunidad/</link>
      <pubDate>Sun, 14 Jan 2018 17:28:40 +0100</pubDate>
      <guid>https://onthedock.github.io/post/180114-vagrant-segunda-oportunidad/</guid>
      <description>&lt;p&gt;Después de una &lt;a href=&#34;https://onthedock.github.io/post/170521-vagrant-primeras-impresiones/&#34;&gt;primera toma de contacto&lt;/a&gt; con sabor agridulce, estos días festivos he dedicado algo más de tiempo a dar una segunda oportunidad a Vagrant.&lt;/p&gt;&#xA;&lt;p&gt;En este artículo recojo mis impresiones en esta nueva toma de contacto.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
